var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.7","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.736,1,2.354]],["body/interfaces/AddSubscription.html",[1,3.775,2,0.843,3,0.843,4,0.59,5,3.528,6,0.913,7,3.528,8,2.871,9,2.216,10,3.528,11,2.86,12,3.528,13,4.782,14,4.815,15,4.782,16,3.071,17,1.903,18,1.903,19,0.711,20,1.18,21,4.782,22,5.151,23,2.216,24,4.782,25,1.768,26,0.026,27,1.531,28,0.478,29,1.327,30,1.147,31,0.02,32,0.023,33,0.02]],["title/interfaces/BackendFactoryInput.html",[0,0.736,34,2.354]],["body/interfaces/BackendFactoryInput.html",[2,0.77,3,0.77,4,0.539,6,0.834,12,3.222,19,0.649,26,0.028,28,0.541,29,1.501,31,0.018,32,0.022,33,0.018,34,2.883,35,2.883,36,0.798,37,3.677,38,2.883,39,1.502,40,4.367,41,2.883,42,2.023,43,3.677,44,3.572,45,2.386,46,5.411,47,1.302,48,2.883,49,1.127,50,3.993,51,4.661,52,4.556,53,3.222,54,2.883,55,2.174,56,5.411,57,1.738,58,4.367,59,2.193,60,3.222,61,3.677,62,2.321,63,4.338,64,1.212,65,2.612,66,2.507]],["title/interfaces/BackendInput.html",[0,0.736,67,2.354]],["body/interfaces/BackendInput.html",[2,0.838,3,0.838,4,0.587,6,0.908,19,0.707,26,0.027,28,0.611,29,1.755,31,0.019,32,0.023,33,0.019,35,3.139,36,0.646,37,4.004,38,3.139,42,2.203,49,1.633,51,4.205,62,2.445,63,4.503,66,2.641,67,3.139,68,2.445,69,2.618,70,1.759,71,4.004]],["title/interfaces/ConnectionBase.html",[0,0.736,72,1.791]],["body/interfaces/ConnectionBase.html",[2,0.566,3,0.566,4,0.396,6,0.613,8,2.221,9,2.05,14,2.704,16,2.221,17,1.278,18,1.278,19,0.478,20,1.045,22,3.725,23,1.488,25,1.872,26,0.028,27,1.417,28,0.546,29,1.228,30,1.214,31,0.013,32,0.018,33,0.013,36,0.436,55,2.116,57,1.278,70,1.188,72,1.612,73,1.921,74,1.921,75,3.212,76,1.921,77,0.829,78,1.872,79,1.636,80,2.98,81,3.212,82,3.212,83,1.612,84,2.704,85,3.212,86,1.105,87,2.704,88,3.212,89,1.488,90,2.05,91,2.704,92,2.766,93,2.417,94,1.921,95,2.37,96,3.212,97,1.921,98,3.212,99,2.704,100,1.921,101,2.921,102,3.212,103,1.488,104,2.05,105,3.212,106,1.278,107,2.704,108,4.425,109,3.212,110,1.319,111,3.212,112,3.212,113,3.212,114,2.417,115,2.704,116,1.755,117,2.704,118,1.755,119,3.212,120,3.212,121,3.212,122,2.704,123,3.212,124,2.221,125,2.704,126,3.212,127,1.636,128,3.212,129,0.566,130,1.105,131,1.761,132,2.704,133,1.755,134,3.212,135,2.704,136,2.017,137,2.704,138,3.212,139,2.37,140,1.921,141,2.704,142,3.212,143,2.37,144,3.212,145,3.212,146,3.212,147,1.612,148,2.12,149,3.212,150,3.212,151,1.188,152,2.12,153,1.488,154,2.37,155,3.212,156,2.05,157,2.12,158,2.12,159,3.212,160,2.12,161,3.212,162,2.704,163,3.212,164,0.957,165,2.704,166,3.212,167,3.265,168,3.212,169,1.278,170,1.921,171,3.212,172,1.378,173,1.278,174,1.755,175,2.704,176,2.12,177,2.704,178,1.755,179,1.488,180,3.212,181,1.488,182,3.212,183,1.488,184,2.704,185,3.212,186,2.37,187,2.12,188,1.755,189,1.612,190,3.212,191,3.212]],["title/interfaces/DragLayer.html",[0,0.736,192,1.948]],["body/interfaces/DragLayer.html",[2,0.492,3,0.492,4,0.345,6,0.533,18,1.111,19,0.415,20,0.828,25,1.483,26,0.027,27,0.894,28,0.583,29,0.775,30,0.67,31,0.011,32,0.016,33,0.011,36,0.696,47,0.832,48,1.843,49,1.402,55,1.483,64,1.302,65,1.67,70,1.483,72,2.013,73,1.67,74,1.67,79,2.008,80,1.526,90,1.294,110,1.195,122,2.351,124,1.402,125,2.351,129,1.171,130,1.945,131,1.867,133,1.526,136,1.735,139,2.06,140,2.398,153,1.294,164,0.832,172,1.198,174,1.526,177,2.351,178,1.526,179,1.858,181,1.294,189,1.402,192,2.191,193,1.526,194,2.959,195,0.961,196,3.462,197,1.858,198,2.792,199,2.811,200,2.792,201,2.06,202,2.792,203,1.67,204,1.843,205,1.843,206,1.198,207,2.792,208,2.792,209,3.376,210,3.585,211,2.792,212,2.351,213,2.351,214,2.008,215,2.06,216,1.843,217,5.249,218,2.06,219,4.01,220,3.732,221,2.792,222,1.402,223,1.72,224,2.398,225,1.526,226,2.013,227,3.097,228,2.792,229,1.843,230,0.622,231,2.351,232,2.792,233,2.792,234,2.792,235,1.843,236,2.792,237,2.06,238,1.198,239,2.792,240,1.294,241,1.67,242,2.792,243,1.111,244,2.806,245,1.294,246,2.06,247,1.294,248,2.012,249,1.843,250,0.961,251,1.843,252,2.06,253,1.67,254,2.959,255,1.843,256,2.012,257,2.351,258,2.792,259,2.351,260,2.06,261,2.06,262,2.792,263,1.033,264,1.67,265,1.111,266,2.06,267,2.792,268,2.06,269,2.792,270,2.792,271,4.01,272,2.792,273,1.302,274,2.792,275,2.351,276,2.398,277,2.792,278,1.526,279,2.351,280,2.06,281,1.402,282,2.792,283,2.06,284,2.792,285,2.351,286,1.526,287,2.792,288,1.526,289,1.033,290,1.843,291,2.792,292,2.06,293,2.792,294,2.792,295,2.647,296,1.67,297,1.67,298,1.67,299,2.06,300,1.843,301,2.351,302,2.351,303,2.792,304,2.792,305,2.792,306,2.792,307,3.376,308,1.843,309,2.351,310,1.294,311,2.792]],["title/interfaces/DragLayerMonitor.html",[0,0.736,244,2.133]],["body/interfaces/DragLayerMonitor.html",[2,0.869,3,0.869,4,0.609,6,0.942,18,1.963,19,0.734,20,1.202,26,0.025,30,1.184,31,0.02,32,0.024,33,0.02,59,2.477,66,2.286,110,1.471,129,0.869,156,2.872,192,2.695,243,1.963,244,2.95,312,4.154,313,3.257,314,2.116,315,2.477,316,1.963,317,2.477,318,3.64,319,3.257]],["title/directives/DragPreviewDirective.html",[320,1.791,321,2.354]],["body/directives/DragPreviewDirective.html",[3,0.836,4,0.585,6,0.906,19,0.705,26,0.026,28,0.569,31,0.019,32,0.023,33,0.019,49,1.224,69,2.034,129,1.003,197,2.636,199,2.636,204,3.13,214,1.754,230,1.056,250,1.957,321,3.13,322,2.197,323,3.13,324,2.034,325,2.836,326,1.952,327,2.836,328,3.499,329,3.13,330,6.096,331,3.403,332,3.33,333,2.034,334,1.631]],["title/interfaces/DragPreviewOptions.html",[0,0.736,332,1.948]],["body/interfaces/DragPreviewOptions.html",[2,0.562,3,0.562,4,0.393,6,0.609,19,0.474,26,0.025,28,0.571,29,1.757,31,0.013,32,0.018,33,0.013,39,1.097,59,2.21,62,1.888,64,0.884,66,2.04,69,1.367,90,1.477,94,1.906,129,1.116,157,2.104,164,1.312,173,1.752,183,2.04,194,2.352,195,2.03,199,2.934,203,2.632,204,2.104,210,2.104,222,2.21,223,1.367,230,0.98,240,1.477,247,2.04,248,1.888,250,1.871,268,2.352,273,0.884,316,2.007,326,1.021,332,1.742,335,2.352,336,5.438,337,5.438,338,4.245,339,5.438,340,5.438,341,3.179,342,3.589,343,4.012,344,2.73,345,4.578,346,5.438,347,3.224,348,3.248,349,4.402,350,3.188,351,4.402,352,3.706,353,4.462,354,4.578,355,2.684,356,4.402,357,4.402,358,3.188,359,4.245,360,2.352,361,2.352,362,3.188,363,2.352,364,2.352,365,1.477,366,1.906,367,3.188,368,3.188,369,3.188,370,1.6,371,2.684,372,4.402,373,3.188,374,2.684,375,3.188,376,3.188,377,3.188,378,3.188,379,1.477,380,3.188,381,1.906,382,2.352,383,4.402,384,3.188,385,1.742,386,3.188,387,3.188,388,1.742,389,2.104,390,2.906,391,2.405,392,3.706]],["title/interfaces/DragSource.html",[0,0.736,326,1.142]],["body/interfaces/DragSource.html",[2,0.521,3,0.521,4,0.365,6,0.565,9,2.572,17,1.177,18,1.177,19,0.44,20,1,25,1.791,26,0.028,27,1.685,28,0.631,29,1.344,30,1.332,31,0.012,32,0.017,33,0.012,36,0.658,39,1.666,49,0.763,55,1.544,69,2.257,70,1.093,72,1.484,73,1.768,74,1.768,77,1.358,78,1.544,86,1.017,91,2.489,103,1.37,106,1.177,116,2.282,118,1.615,124,1.484,129,0.853,130,1.017,136,1.093,164,0.881,199,1.37,203,3.445,205,2.757,222,2.097,230,1.078,238,1.791,250,1.437,256,1.268,273,0.82,276,3.147,278,1.615,281,1.484,286,1.615,288,1.615,289,1.791,322,1.935,324,2.077,326,1.845,332,2.282,341,1.484,370,2.097,379,2.244,393,1.268,394,2.181,395,1.768,396,2.489,397,2.181,398,2.181,399,2.431,400,2.489,401,1.768,402,3.516,403,3.516,404,4.077,405,4.077,406,2.956,407,2.757,408,2.077,409,2.498,410,2.757,411,2.498,412,2.956,413,1.615,414,2.181,415,2.181,416,2.956,417,2.181,418,3.516,419,3.516,420,2.757,421,3.516,422,3.516,423,3.082,424,2.956,425,2.498,426,2.489,427,0.82,428,1.952,429,2.956,430,2.257,431,2.097,432,3.516,433,2.489,434,1.952,435,1.952,436,1.768,437,2.181,438,1.268,439,1.177,440,2.498,441,2.489,442,1.952,443,1.952,444,2.181,445,3.516,446,2.956,447,2.956,448,0.709,449,4.176,450,1.768,451,2.956,452,2.956,453,2.956,454,2.956,455,2.956,456,2.956,457,2.956,458,2.956,459,2.956,460,2.956,461,2.956,462,1.484]],["title/directives/DragSourceDirective.html",[320,1.791,463,2.354]],["body/directives/DragSourceDirective.html",[3,0.77,4,0.539,6,0.834,19,0.649,26,0.027,28,0.615,31,0.018,32,0.022,33,0.018,36,0.735,47,1.302,49,1.127,59,2.193,69,1.873,77,1.127,78,1.615,114,2.386,169,1.738,195,1.502,197,2.507,199,2.023,214,1.615,215,3.222,223,1.873,230,0.973,250,1.502,273,1.212,316,1.738,322,2.023,323,2.883,324,1.873,326,2.089,328,3.222,329,2.883,331,3.236,333,1.873,334,1.502,338,3.677,389,2.883,391,2.386,399,2.717,425,3.516,430,1.873,431,2.193,463,2.883,464,5.411,465,5.411,466,3.677,467,3.677,468,3.677,469,4.367,470,4.367,471,4.367]],["title/interfaces/DragSourceMonitor.html",[0,0.736,472,2.133]],["body/interfaces/DragSourceMonitor.html",[2,0.627,3,0.627,4,0.439,6,0.68,17,1.416,18,1.416,19,0.529,20,1.101,26,0.026,30,1.592,31,0.024,32,0.019,33,0.015,36,0.483,57,1.888,59,2.382,66,2.472,68,1.526,79,1.316,83,1.787,110,1.061,129,0.94,156,2.637,169,1.416,173,1.416,179,2.198,230,0.793,243,1.416,245,1.649,283,2.626,288,1.944,299,2.626,313,2.349,314,1.526,315,1.787,316,2.426,317,2.382,318,3.5,319,2.349,325,2.128,334,1.632,361,2.626,365,1.649,379,1.649,388,1.944,411,2.837,427,1.809,434,2.349,439,1.416,448,1.28,450,2.128,472,2.128,473,2.996,474,3.559,475,4.592,476,4.791,477,4.492,478,2.996,479,2.592,480,1.649,481,3.559,482,2.996,483,1.787,484,3.559,485,3.559,486,2.996,487,2.626,488,2.128,489,3.559,490,2.996,491,2.996,492,2.626,493,3.191,494,2.349,495,2.837,496,2.996,497,2.626,498,2.996,499,1.754,500,2.996,501,2.996,502,2.996,503,2.996,504,2.626,505,1.787,506,2.996,507,2.996,508,3.131,509,2.128,510,2.626,511,2.996]],["title/interfaces/DragSourceOptions.html",[0,0.736,425,2.133]],["body/interfaces/DragSourceOptions.html",[2,0.786,3,0.786,4,0.55,6,0.851,19,0.663,26,0.027,28,0.446,29,1.521,31,0.018,32,0.022,33,0.018,36,0.605,49,1.151,62,2.351,64,1.237,90,2.539,164,1.329,195,1.534,218,3.289,245,2.066,248,1.912,280,3.289,296,2.666,326,1.755,335,3.289,389,2.943,390,3.618,425,2.666,430,1.912,512,4.458,513,2.436,514,4.996,515,3.917,516,4.195,517,4.614,518,4.614,519,4.458,520,2.943,521,4.458,522,3.754,523,4.458,524,4.458,525,4.458,526,4.458,527,3.754,528,4.458,529,4.458]],["title/interfaces/DragSourceSpec.html",[0,0.736,439,1.419]],["body/interfaces/DragSourceSpec.html",[0,0.91,2,0.441,3,0.441,4,0.309,6,0.478,17,1.473,18,0.996,19,0.372,20,0.764,25,1.922,26,0.028,27,1.559,28,0.601,29,1.71,30,1.247,31,0.015,32,0.018,33,0.01,36,0.34,39,0.861,44,2.908,47,0.746,49,0.646,57,2.068,60,1.846,62,1.073,66,1.715,68,1.588,70,0.925,76,1.497,86,0.861,92,1.367,93,1.367,104,1.159,110,1.678,114,1.367,116,1.367,124,1.256,129,0.858,131,0.996,136,0.925,143,1.846,147,1.256,156,1.715,164,1.104,172,2.088,179,1.159,187,1.652,193,1.367,195,1.516,201,1.846,206,1.588,227,2.444,230,1.212,235,1.652,243,1.473,245,1.159,246,1.846,247,1.159,248,1.89,256,1.588,263,0.925,273,1.604,286,2.972,289,0.925,290,1.652,300,1.652,310,1.715,314,1.588,316,0.996,317,1.256,333,1.073,334,1.274,341,1.859,363,1.846,364,1.846,365,1.159,381,1.497,385,1.367,395,1.497,398,1.846,408,1.073,413,1.367,427,1.442,430,1.073,439,0.996,443,1.652,448,0.888,450,1.497,462,2.609,472,3.642,475,2.732,480,2.256,483,1.256,493,2.912,495,1.497,499,1.369,509,2.214,511,2.107,514,2.107,515,2.444,516,1.652,527,2.107,530,2.107,531,1.846,532,1.846,533,1.367,534,1.497,535,1.652,536,2.107,537,2.503,538,2.503,539,2.503,540,2.503,541,2.107,542,1.846,543,1.846,544,2.503,545,3.117,546,4.406,547,2.503,548,3.702,549,3.702,550,2.107,551,1.652,552,1.846,553,2.503,554,3.702,555,2.503,556,2.107,557,2.503,558,2.503,559,2.503,560,2.503,561,2.503,562,2.107,563,1.652,564,2.503,565,2.107,566,2.107,567,2.503,568,2.444,569,1.846,570,2.503,571,1.846,572,2.503,573,2.107,574,2.107,575,2.107,576,2.503,577,2.107,578,2.503,579,1.256,580,2.214,581,2.503,582,2.503,583,1.846,584,2.107,585,2.503,586,2.503,587,2.503,588,1.652,589,2.107,590,2.503,591,1.367,592,2.107,593,2.503,594,2.503,595,2.503,596,2.503,597,1.367,598,3.702,599,1.846,600,2.503,601,2.107,602,2.503,603,2.107,604,2.503,605,1.846,606,2.503,607,2.107,608,2.503,609,2.732,610,2.503,611,1.652,612,1.652,613,2.444,614,2.107,615,1.846,616,1.367,617,1.159,618,2.107,619,2.107,620,2.107,621,1.846,622,2.107]],["title/interfaces/DropTarget.html",[0,0.736,393,1.53]],["body/interfaces/DropTarget.html",[2,0.676,3,0.676,4,0.474,6,0.733,7,2.832,9,2.565,17,1.527,18,1.527,19,0.571,20,1.029,25,1.844,26,0.026,27,1.596,28,0.634,29,1.383,30,1.406,31,0.016,32,0.02,33,0.016,36,0.521,39,1.715,49,0.991,55,1.419,64,1.065,70,1.419,72,1.927,73,2.295,74,2.295,77,1.429,78,1.419,79,1.419,86,1.32,89,1.778,116,2.097,118,2.097,124,1.927,129,0.676,130,1.32,136,1.844,203,3.311,222,1.927,238,1.646,250,1.715,278,2.097,286,2.097,289,1.419,322,1.778,324,2.138,326,1.596,370,1.927,379,2.565,393,2.375,399,2.503,401,2.295,404,4.662,407,2.534,408,1.646,409,2.295,410,2.534,411,2.295,418,3.232,419,3.232,420,2.534,421,3.232,422,3.232,426,3.232,427,1.536,428,2.534,432,4.198,433,3.232,434,2.534,435,2.534,436,2.295,437,2.832,438,1.646,440,2.295,442,2.534,448,1.328,483,1.927,597,2.097,617,1.778,623,1.927,624,4.985,625,4.985,626,3.838,627,3.838,628,3.291]],["title/directives/DropTargetDirective.html",[320,1.791,629,2.632]],["body/directives/DropTargetDirective.html",[3,0.772,4,0.54,6,0.836,11,3.241,19,0.651,25,1.619,26,0.026,27,1.402,28,0.589,29,1.215,30,1.05,31,0.018,32,0.022,33,0.018,36,0.595,47,1.305,77,1.13,78,1.619,114,2.392,124,2.198,169,1.742,215,3.231,250,1.506,261,3.999,273,1.215,322,2.029,323,2.89,324,1.878,328,3.231,329,2.89,331,3.241,393,2.763,399,2.721,448,1.05,466,3.686,467,3.686,468,3.686,628,2.89,629,3.231,630,6.151,631,6.151,632,5.42,633,5.42,634,5.42,635,4.563,636,5.42,637,5.42,638,4.378,639,4.378]],["title/interfaces/DropTargetMonitor.html",[0,0.736,640,2.133]],["body/interfaces/DropTargetMonitor.html",[2,0.631,3,0.631,4,0.442,6,0.684,17,1.425,18,1.425,19,0.532,20,1.105,25,1.324,26,0.026,27,1.147,28,0.536,29,0.994,30,1.586,31,0.024,32,0.02,33,0.015,36,0.486,57,1.425,59,2.391,66,2.48,68,1.536,69,1.536,79,1.324,110,1.068,129,0.839,158,3.144,160,3.766,173,1.425,179,2.207,243,1.425,245,2.207,247,1.659,263,1.324,288,1.957,313,2.364,314,1.536,315,1.798,316,2.43,317,2.391,318,3.515,319,2.364,325,2.142,333,1.536,334,1.639,361,2.642,370,1.798,379,1.659,411,2.849,423,2.642,427,1.843,434,2.364,448,1.369,450,2.142,476,4.803,477,4.506,478,3.015,479,1.957,492,2.642,494,2.364,495,2.849,496,3.015,497,2.642,498,3.015,499,1.762,500,4.011,501,3.015,502,3.015,503,3.015,504,3.949,505,1.798,506,3.015,507,3.015,508,2.364,509,2.142,510,3.515,591,1.957,640,2.142,641,3.015,642,3.581,643,3.581,644,4.763,645,3.581,646,2.642,647,2.642,648,3.581,649,3.015,650,2.642,651,3.581]],["title/interfaces/DropTargetSpec.html",[0,0.736,89,1.652]],["body/interfaces/DropTargetSpec.html",[2,0.591,3,0.591,4,0.414,6,0.641,17,2.211,19,0.499,20,0.941,25,2.149,26,0.026,27,1.658,28,0.581,29,1.755,30,1.333,31,0.019,32,0.019,33,0.014,36,0.456,47,1.001,57,1.815,59,1.685,64,0.931,66,1.555,68,1.956,76,2.007,83,1.685,86,1.155,89,1.555,92,1.834,93,2.491,97,2.007,104,1.555,110,1.544,114,1.834,124,2.29,129,0.591,131,1.336,147,1.685,160,3.419,162,2.826,164,1.001,172,1.44,179,2.4,187,2.216,195,1.155,206,1.956,209,2.826,226,1.685,230,1.016,243,1.336,245,2.113,255,2.216,256,2.383,263,1.241,273,1.437,296,2.007,310,1.555,314,1.44,316,1.336,319,2.216,327,2.007,334,1.569,363,2.477,370,1.685,411,2.007,427,1.701,439,1.815,448,1.438,479,1.834,480,2.113,493,2.007,494,2.216,495,2.007,499,1.241,504,3.365,509,2.007,510,2.477,531,2.477,532,2.477,533,1.834,534,2.727,535,2.216,563,3.419,580,2.007,583,2.477,584,2.826,589,3.84,612,2.216,613,3.01,614,2.826,615,2.477,616,1.834,617,2.113,618,2.826,619,2.826,620,2.826,621,2.477,622,2.826,640,3.731,652,2.826,653,3.356,654,2.826,655,3.356,656,3.356,657,2.216,658,2.826,659,2.826,660,3.356,661,3.356,662,3.356,663,3.356,664,3.356,665,3.356,666,2.826,667,3.356,668,3.356,669,2.826]],["title/interfaces/MonitorBase.html",[0,0.736,315,1.791]],["body/interfaces/MonitorBase.html",[2,0.63,3,0.63,4,0.441,6,0.682,19,0.531,20,1.104,26,0.028,28,0.358,30,1.593,31,0.015,32,0.019,33,0.015,41,2.359,77,1.228,110,1.065,116,1.952,129,0.838,173,2.643,226,2.388,230,0.796,247,2.886,248,2.748,249,2.359,250,1.636,253,2.845,254,4.38,256,2.798,315,1.794,317,1.794,347,3.243,348,4.206,430,1.533,431,1.794,439,1.422,670,3.009,671,3.009,672,2.359,673,2.359,674,5.347,675,5.347,676,5.347,677,5.347,678,5.347,679,5.347,680,5.347,681,5.936,682,4.799,683,3.574,684,4.757,685,4.502,686,3.574,687,4.757,688,3.574,689,3.009]],["title/interfaces/Offset.html",[0,0.736,347,1.948]],["body/interfaces/Offset.html",[2,0.857,3,0.857,4,0.6,6,0.929,19,0.723,26,0.026,28,0.617,31,0.02,32,0.024,33,0.02,62,2.478,68,2.086,302,5.188,341,3.2,347,2.657,690,3.589,691,3.589,692,4.864,693,4.864,694,5.367,695,5.367]],["title/modules/SkyhookDndModule.html",[42,1.652,696,2.133]],["body/modules/SkyhookDndModule.html",[3,0.869,4,0.609,20,1.018,25,1.824,26,0.027,27,1.58,28,0.494,29,1.369,30,1.184,31,0.02,32,0.024,33,0.02,34,3.845,35,3.257,42,2.286,67,3.845,697,3.257,698,3.64,699,5.219,700,4.154,701,4.154,702,4.934,703,4.934,704,4.934]],["title/injectables/SkyhookDndService.html",[86,1.227,705,2.354]],["body/injectables/SkyhookDndService.html",[1,3.803,3,0.521,4,0.365,5,2.181,6,0.797,7,2.181,8,2.431,9,2.889,17,1.662,19,0.44,20,0.862,23,1.37,25,2.131,26,0.028,27,1.551,28,0.642,29,1.344,30,1.162,31,0.012,32,0.017,33,0.012,36,0.401,45,1.615,47,0.881,77,0.763,78,1.093,80,1.615,86,1.017,89,1.935,92,1.615,97,1.768,101,2.757,103,1.935,104,2.572,106,1.177,129,0.927,151,1.791,164,1.245,167,3.082,169,1.177,173,2.293,179,1.935,181,1.935,188,1.615,189,1.484,192,2.875,214,1.093,227,1.952,230,0.93,235,1.952,238,1.268,245,1.37,250,1.437,256,2.257,260,2.181,273,1.159,320,1.484,326,1.896,333,1.791,334,1.437,344,1.484,379,1.37,393,2.257,408,2.077,423,3.573,427,1.159,430,1.791,431,2.097,435,2.757,436,1.768,438,1.268,439,1.927,442,2.757,448,1.002,488,1.768,499,1.093,505,2.097,509,2.498,513,2.282,543,2.181,556,2.489,579,1.484,580,1.768,583,3.082,623,1.484,628,2.757,672,1.952,706,2.956,707,2.489,708,1.952,709,2.956,710,2.489,711,2.956,712,2.956,713,2.489,714,2.956,715,3.082,716,2.956,717,2.956,718,2.956,719,1.615,720,2.956,721,2.956,722,2.956,723,2.956,724,2.956,725,2.956,726,2.956,727,5.761,728,2.956,729,2.489,730,2.956,731,2.956,732,2.489,733,2.489,734,2.181,735,2.489,736,2.489,737,2.956,738,2.956,739,2.956,740,2.956,741,2.956,742,4.176,743,3.516,744,3.516,745,2.956,746,2.956,747,2.956]],["title/changelog.html",[249,2.005,748,2.558,749,3.038]],["body/changelog.html",[4,0.467,10,2.794,11,2.265,26,0.023,31,0.016,32,0.02,33,0.016,47,1.64,49,1.276,64,1.051,69,1.624,90,1.755,127,2.034,131,1.507,151,1.401,197,1.755,206,1.624,220,2.5,252,2.794,289,1.401,352,3.189,365,1.755,408,1.624,480,1.755,623,1.901,719,2.7,732,3.189,750,3.787,751,3.787,752,3.787,753,3.189,754,3.787,755,3.189,756,3.189,757,3.787,758,3.787,759,5.831,760,4.942,761,3.787,762,5.223,763,6.203,764,3.779,765,3.189,766,3.189,767,5.501,768,2.794,769,3.787,770,3.787,771,3.787,772,3.787,773,3.787,774,3.787,775,3.787,776,4.942,777,5.501,778,3.787,779,3.787,780,3.787,781,3.787,782,3.189,783,3.787,784,3.189,785,3.189,786,3.189,787,3.189,788,3.787,789,3.787,790,3.787,791,3.787,792,3.787,793,3.787,794,3.787,795,3.647,796,3.787,797,5.501,798,5.501,799,3.787,800,3.787,801,2.794,802,3.787,803,3.787,804,4.942,805,4.942,806,3.787,807,3.787,808,2.794,809,3.189,810,3.787,811,3.787,812,3.189,813,3.787,814,3.189,815,3.787,816,3.787,817,3.787,818,2.069,819,3.189,820,3.787]],["title/coverage.html",[821,4]],["body/coverage.html",[0,1.376,1,2.274,4,0.425,5,3.424,26,0.028,28,0.345,31,0.014,32,0.019,33,0.014,34,2.274,35,3.063,67,2.274,72,1.729,73,3.358,74,3.358,86,1.185,89,1.596,106,1.371,170,3.612,192,1.882,230,0.767,244,2.06,312,2.9,313,3.464,315,1.729,320,2.635,321,2.274,323,3.464,326,1.103,332,1.882,335,3.424,347,1.882,393,1.477,425,2.06,439,1.371,448,0.826,463,2.274,472,2.06,473,2.9,530,2.9,531,3.424,629,2.541,640,2.06,641,2.9,652,2.9,670,2.9,671,2.9,690,2.541,691,2.541,705,2.274,821,2.9,822,2.274,823,3.444,824,3.444,825,5.733,826,5.863,827,5.616,828,5.863,829,3.444,830,4.641,831,3.444,832,3.444,833,3.444,834,3.444,835,3.444,836,5.085,837,2.9,838,6.039,839,2.9,840,2.9,841,2.9,842,2.541,843,2.9,844,3.444,845,3.444]],["title/dependencies.html",[795,2.242,801,3.141]],["body/dependencies.html",[8,2.521,26,0.028,31,0.021,32,0.024,33,0.021,127,1.857,764,3.002,784,4.227,785,4.227,801,4.343,846,5.02,847,5.02,848,5.02,849,3.704,850,5.886,851,5.02]],["title/index.html",[19,0.452,249,2.005,748,2.558]],["body/index.html",[2,0.438,4,0.307,16,1.249,26,0.015,31,0.01,32,0.015,33,0.01,36,0.596,38,2.433,39,1.268,44,1.642,47,1.886,48,1.642,49,1.253,64,0.69,70,0.92,77,0.642,90,1.153,93,1.359,114,2.014,127,2.321,129,0.856,133,1.359,136,0.92,140,1.488,147,1.249,151,2.277,152,1.642,153,2.25,164,0.742,169,1.467,172,2.083,178,1.359,183,1.153,188,1.359,193,2.399,194,1.836,197,2.034,206,1.883,212,2.095,214,1.363,216,1.642,225,1.359,227,2.433,235,1.642,237,1.836,240,1.708,251,1.642,252,2.72,263,1.363,264,2.626,273,0.69,281,1.249,289,1.363,290,1.642,297,1.488,317,1.249,342,1.642,354,2.095,360,1.836,364,1.836,365,1.153,381,1.488,382,1.836,388,2.014,396,2.095,420,1.642,427,1.347,438,1.067,448,0.597,480,1.153,483,1.851,488,2.204,495,1.488,513,2.014,533,1.359,541,2.095,542,1.836,550,2.095,551,1.642,552,1.836,566,2.095,591,2.014,597,1.359,603,3.104,605,1.836,611,1.642,612,2.433,613,1.642,617,1.708,621,1.836,649,2.095,657,1.642,666,2.095,669,2.095,673,1.642,708,1.642,719,1.359,735,2.095,762,2.095,764,2.626,795,1.836,809,2.095,814,2.095,818,2.966,822,2.433,852,2.488,853,3.697,854,3.686,855,2.488,856,2.488,857,2.488,858,2.488,859,3.583,860,2.095,861,1.836,862,2.488,863,1.836,864,2.433,865,2.488,866,2.488,867,2.488,868,2.488,869,1.836,870,2.488,871,2.488,872,2.095,873,2.488,874,2.488,875,2.488,876,2.488,877,2.488,878,2.095,879,2.095,880,2.488,881,1.836,882,2.488,883,2.488,884,2.488,885,2.095,886,2.488,887,2.488,888,2.488,889,2.488,890,1.488,891,2.488,892,2.488,893,2.488,894,2.095,895,2.488,896,2.095,897,1.836,898,2.488,899,2.488,900,2.095,901,2.488,902,2.488,903,3.686,904,2.488,905,1.836,906,2.488,907,2.488,908,2.095,909,2.72,910,2.095,911,3.104,912,2.488,913,2.488,914,2.095,915,2.488,916,2.488,917,1.836,918,2.488,919,2.095,920,2.095,921,2.488,922,2.488,923,2.488,924,2.488,925,2.488,926,2.488,927,2.095,928,2.488,929,2.488,930,1.836,931,2.488,932,2.488,933,2.488,934,2.095,935,2.095,936,2.488,937,2.488,938,2.488,939,2.488,940,2.488,941,2.488,942,2.488,943,2.488,944,2.488,945,2.095,946,2.488,947,2.488,948,2.488,949,2.488,950,2.488,951,2.488,952,2.488,953,2.488,954,2.488,955,2.488,956,2.488,957,1.642,958,1.836,959,2.488,960,2.488,961,2.433,962,2.488,963,2.488,964,2.488,965,1.836,966,1.836,967,4.391,968,3.686,969,2.488,970,2.488,971,2.488,972,2.488,973,1.836,974,2.488,975,2.488,976,2.488,977,2.488,978,3.686,979,2.488,980,2.488,981,2.488,982,2.488,983,2.095,984,2.488,985,2.488,986,1.642,987,2.488,988,2.488,989,4.855,990,2.095,991,2.095,992,2.488,993,2.488,994,2.488,995,2.488,996,2.488,997,2.488,998,2.095,999,2.488,1000,2.488,1001,2.488,1002,2.488,1003,2.095,1004,1.836,1005,4.391,1006,2.488,1007,3.686,1008,2.488]],["title/modules.html",[697,3.136]],["body/modules.html",[26,0.025,31,0.022,32,0.025,33,0.022,42,2.463,697,3.51,1009,4.477]],["title/overview.html",[1010,4]],["body/overview.html",[2,0.92,26,0.025,31,0.021,32,0.025,33,0.021,322,2.418,344,3.022,696,3.121,705,3.445,782,4.395,1010,4.395,1011,3.121]],["title/miscellaneous/typealiases.html",[1012,2.005,1013,4.257]],["body/miscellaneous/typealiases.html",[19,0.694,26,0.027,28,0.467,31,0.019,32,0.023,33,0.019,55,2.325,103,2.61,222,2.342,427,1.294,430,2.696,431,3.156,499,1.725,628,3.719,690,3.442,691,4.157,957,3.719,1012,3.079,1014,4.665,1015,5.634,1016,6.436,1017,5.634,1018,5.634,1019,5.634,1020,4.665,1021,4.665]],["title/miscellaneous/variables.html",[1012,2.005,1022,3.584]],["body/miscellaneous/variables.html",[19,0.557,26,0.027,28,0.581,31,0.015,32,0.02,33,0.015,36,0.789,49,1.556,63,2.764,64,1.039,69,2.105,90,1.736,97,2.24,106,2.399,127,2.413,136,1.385,173,1.491,195,2.128,230,0.834,283,2.764,326,1.199,391,3.379,393,1.607,431,2.463,448,0.899,646,4.038,657,4.083,764,3.902,765,3.154,768,4.448,836,3.154,837,4.131,839,4.131,840,4.131,841,4.131,842,3.621,843,4.131,961,2.473,1012,2.473,1022,3.154,1023,6.185,1024,6.028,1025,6.028,1026,2.764,1027,3.154,1028,3.746,1029,4.131,1030,4.907,1031,3.746,1032,3.746,1033,3.746,1034,3.746,1035,3.154]],["title/additional-documentation/quickstart.html",[265,1.209,863,2.242,1036,1.408]],["body/additional-documentation/quickstart.html",[2,0.376,10,1.573,11,1.275,12,1.573,16,1.07,26,0.028,28,0.328,31,0.009,32,0.016,33,0.009,36,0.695,38,2.639,39,1.544,42,2.08,43,2.762,44,1.407,45,3.084,47,1.641,48,2.165,49,1.624,50,2.95,51,1.573,52,1.795,54,2.165,55,1.792,57,1.305,60,1.573,61,3.78,62,0.914,64,0.591,65,1.275,68,0.914,70,1.213,71,3.366,77,1.159,79,0.788,90,2.246,93,1.165,94,1.275,95,1.573,100,1.275,103,0.988,104,0.988,106,0.848,110,0.978,127,1.893,129,1.034,130,1.128,131,0.848,133,1.165,136,1.213,151,1.893,153,1.852,172,0.914,173,0.848,183,0.988,188,1.792,195,1.834,197,2.47,199,1.52,203,2.391,214,1.66,216,1.407,218,1.573,220,1.407,222,1.07,223,1.715,225,1.165,230,1,237,1.573,240,2.47,241,2.898,243,0.848,250,0.733,256,1.407,264,2.391,273,1.109,278,2.184,281,1.647,289,0.788,295,2.165,298,1.275,308,2.639,310,1.52,316,0.848,317,1.07,324,1.407,334,0.733,342,1.407,343,1.573,365,1.52,366,1.275,381,1.275,385,1.165,388,1.165,389,2.639,391,1.165,400,1.795,401,1.275,407,1.407,408,0.914,409,1.275,420,1.407,427,1.345,431,1.07,438,1.407,440,1.275,448,0.511,475,1.573,479,1.165,480,0.988,493,1.275,499,0.788,505,1.07,508,2.165,513,1.165,522,1.795,534,1.275,535,1.407,565,1.795,579,1.07,580,1.275,591,1.165,615,1.573,657,1.407,673,1.407,689,1.795,696,2.391,697,1.407,699,2.762,701,1.795,713,1.795,719,1.792,734,1.573,766,1.795,812,1.795,818,1.165,822,1.407,860,1.795,861,1.573,864,1.407,872,1.795,878,1.795,894,1.795,919,1.795,945,1.795,958,1.573,961,2.165,986,1.407,1004,1.573,1009,2.762,1011,1.961,1027,1.795,1037,2.132,1038,1.573,1039,2.132,1040,4.847,1041,1.795,1042,3.28,1043,2.762,1044,1.407,1045,2.132,1046,1.795,1047,2.132,1048,2.132,1049,2.898,1050,2.132,1051,2.132,1052,1.573,1053,1.407,1054,1.795,1055,2.132,1056,2.132,1057,2.762,1058,3.28,1059,3.28,1060,2.184,1061,3.28,1062,2.132,1063,1.795,1064,1.795,1065,2.132,1066,2.132,1067,2.132,1068,2.132,1069,2.132,1070,1.795,1071,1.407,1072,2.762,1073,1.795,1074,1.795,1075,1.407,1076,1.407,1077,2.132,1078,2.132,1079,2.132,1080,1.795,1081,3.28,1082,2.132,1083,2.132,1084,2.762,1085,2.132,1086,2.132,1087,1.573,1088,2.132,1089,1.795,1090,2.132,1091,2.132,1092,2.132,1093,1.573,1094,1.795,1095,2.132,1096,2.132,1097,3.28,1098,3.28,1099,2.132,1100,3.28,1101,2.132,1102,3.28,1103,2.132,1104,2.132,1105,2.132,1106,3.28,1107,2.132,1108,2.132,1109,2.132,1110,2.132,1111,2.132,1112,2.132,1113,2.132,1114,2.132,1115,2.132,1116,2.132,1117,2.132,1118,2.132,1119,2.132,1120,2.132,1121,2.132,1122,1.573,1123,2.132,1124,2.762,1125,2.132,1126,2.132,1127,2.132,1128,2.132,1129,2.132,1130,2.132,1131,3.28,1132,1.795,1133,1.795,1134,2.132,1135,2.132,1136,1.795,1137,2.762,1138,2.132,1139,2.132,1140,1.795,1141,2.132,1142,1.795,1143,2.132,1144,2.132]],["title/additional-documentation/guide.html",[265,1.209,1036,1.408,1076,2.005]],["body/additional-documentation/guide.html",[17,1.903,20,0.987,26,0.023,31,0.02,32,0.023,33,0.02,36,0.777,47,1.425,77,1.476,78,2.115,79,2.115,101,3.157,130,1.967,131,1.903,181,2.216,214,1.768,224,2.86,225,2.613,238,2.051,299,3.528,322,2.216,325,2.86,327,2.86,344,2.401,399,2.401,401,2.86,623,2.401,715,3.528,818,2.613,1075,3.157,1145,3.157,1146,3.157,1147,4.026,1148,2.86,1149,4.782,1150,4.782,1151,3.157,1152,4.782]],["title/additional-documentation/guide/1.-creating-connections.html",[265,0.933,344,1.176,1036,1.086,1145,1.547,1146,1.547]],["body/additional-documentation/guide/1.-creating-connections.html",[8,2.067,9,2.416,16,1.454,20,0.85,23,1.342,26,0.028,28,0.29,31,0.012,32,0.017,33,0.012,36,0.559,39,0.996,45,1.582,55,1.071,64,0.804,72,1.454,77,1.346,78,2.116,79,1.771,80,2.249,86,1.895,89,1.342,103,1.907,104,1.342,106,1.153,110,0.863,117,3.466,127,1.522,129,0.725,131,1.638,136,2.037,164,0.863,167,2.137,170,1.732,172,1.242,174,1.582,181,2.552,183,1.907,189,2.067,192,1.582,193,1.582,195,0.996,210,1.912,214,1.771,230,1.066,238,2.455,240,1.342,241,1.732,248,1.765,260,3.037,263,1.071,266,2.137,273,1.669,276,1.732,286,1.582,289,1.071,295,1.912,301,2.439,324,1.765,326,1.318,334,1.416,341,1.454,365,1.342,366,1.732,393,1.765,408,1.765,427,0.804,438,1.242,439,1.153,444,2.137,448,1.149,462,1.454,487,3.037,499,1.071,520,1.912,543,2.137,545,3.466,579,1.454,617,1.342,623,1.454,635,3.466,672,1.912,707,2.439,708,1.912,710,2.439,743,2.439,808,2.137,905,3.037,909,2.137,930,2.137,957,1.912,966,2.137,1038,2.137,1049,1.732,1052,2.137,1053,1.912,1060,1.582,1071,1.912,1089,2.439,1140,2.439,1145,2.717,1146,3.161,1148,1.732,1153,3.847,1154,4.116,1155,3.533,1156,4.116,1157,2.896,1158,2.896,1159,2.439,1160,3.037,1161,2.137,1162,2.896,1163,2.896,1164,2.896,1165,2.896,1166,2.896,1167,3.466,1168,3.037,1169,2.896,1170,2.439,1171,2.896,1172,2.896,1173,2.896,1174,2.896,1175,2.439,1176,2.137,1177,2.896,1178,2.896,1179,2.896,1180,2.137,1181,2.896,1182,2.896,1183,2.896,1184,4.116,1185,5.214,1186,2.439,1187,2.896,1188,2.896,1189,2.439,1190,2.439,1191,3.466,1192,2.896,1193,2.896,1194,2.896,1195,2.896,1196,2.896,1197,2.896,1198,2.439]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[77,0.605,148,1.547,265,0.933,1036,1.086,1148,1.401]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[20,0.616,23,1.382,26,0.028,27,1.345,31,0.012,32,0.017,33,0.012,36,0.717,39,1.026,49,1.085,64,1.166,69,1.279,77,1.363,78,1.554,80,2.296,83,2.11,89,1.382,92,1.629,94,1.783,106,1.187,110,0.889,129,1.046,130,1.026,131,1.187,151,1.103,164,0.889,186,3.1,195,1.026,197,1.382,199,2.677,204,2.774,205,3.212,210,1.969,214,2.137,217,2.511,223,1.279,224,2.513,225,1.629,226,2.11,229,1.969,230,1.084,238,1.279,240,1.382,241,1.783,247,1.947,248,1.279,250,2.149,256,1.279,263,1.103,278,1.629,292,2.2,295,2.774,296,3.455,297,2.513,310,1.947,314,1.802,320,1.497,321,1.969,326,1.558,331,1.783,332,1.629,333,1.279,353,3.1,366,1.783,385,1.629,390,2.774,413,1.629,414,2.2,415,2.2,417,2.2,427,1.35,436,1.783,438,1.279,439,1.672,448,1.008,462,1.497,463,1.969,488,1.783,499,1.103,513,1.629,516,1.969,520,1.969,536,2.511,563,1.969,568,1.969,579,1.497,588,1.969,597,1.629,601,2.511,611,2.774,616,2.658,623,2.11,650,2.2,672,1.969,700,2.511,869,2.2,890,1.783,908,2.511,983,2.511,1026,2.2,1038,2.2,1147,3.538,1148,1.783,1151,1.969,1155,3.1,1199,2.982,1200,2.982,1201,2.982,1202,4.202,1203,4.202,1204,2.982,1205,4.202,1206,4.202,1207,3.1,1208,4.202,1209,4.202,1210,3.538,1211,4.202,1212,2.982,1213,2.511,1214,2.982,1215,2.511,1216,2.511,1217,2.982,1218,4.202,1219,2.982,1220,2.982,1221,4.202,1222,2.982,1223,2.982,1224,2.511,1225,2.982,1226,2.982,1227,2.982,1228,2.982,1229,2.511,1230,2.982,1231,2.982,1232,2.982,1233,2.2,1234,2.982,1235,2.511,1236,2.982,1237,2.511,1238,2.511,1239,2.982,1240,2.982,1241,2.982]],["title/additional-documentation/guide/3.-monitoring-state.html",[130,0.806,265,0.933,1011,1.401,1036,1.086,1151,1.547]],["body/additional-documentation/guide/3.-monitoring-state.html",[2,0.762,8,1.56,20,0.893,23,2.305,26,0.028,28,0.433,30,0.745,31,0.013,32,0.018,33,0.013,36,0.587,39,1.069,53,2.292,55,1.149,62,1.855,70,1.149,78,1.599,79,2.091,83,2.171,100,1.858,104,2.305,110,1.79,116,1.697,118,1.697,127,1.149,129,0.762,130,1.711,133,1.697,141,2.616,147,1.56,151,1.149,153,2.003,156,1.439,158,2.051,164,1.603,169,1.721,170,1.858,174,2.362,176,2.854,178,2.362,183,1.439,187,2.854,188,2.717,206,1.332,223,1.332,226,1.56,243,1.721,244,1.858,253,2.586,255,2.051,261,2.292,263,1.149,264,1.858,273,1.2,281,1.56,289,1.149,298,1.858,300,2.051,310,2.003,314,1.332,315,1.56,316,1.236,327,1.858,334,1.711,341,1.56,347,1.697,379,1.439,381,2.586,393,1.332,395,3.216,408,1.332,427,1.38,438,1.332,441,2.616,448,1.29,472,1.858,480,1.439,483,2.171,490,2.616,515,2.051,533,1.697,535,2.051,588,2.051,609,2.292,613,2.051,616,1.697,617,1.439,640,1.858,647,3.67,682,2.616,753,2.616,859,2.292,890,1.858,958,2.292,1046,2.616,1053,2.051,1060,2.938,1071,2.051,1080,2.616,1094,2.616,1151,2.051,1153,3.191,1213,2.616,1233,2.292,1242,2.616,1243,2.616,1244,3.191,1245,2.616,1246,3.107,1247,4.974,1248,3.641,1249,3.107,1250,3.107,1251,3.107,1252,4.324,1253,3.107,1254,2.616,1255,2.616,1256,2.616,1257,3.107,1258,3.107,1259,3.107,1260,3.107,1261,4.324,1262,3.107,1263,2.616,1264,3.107,1265,2.616,1266,3.107,1267,2.292,1268,2.616,1269,4.324,1270,3.107,1271,3.107,1272,2.616,1273,3.107,1274,3.641,1275,3.107,1276,3.107,1277,3.107,1278,3.107,1279,2.292,1280,2.616,1281,3.107,1282,3.107,1283,3.107,1284,2.616]],["title/additional-documentation/chess-tutorial.html",[265,1.053,864,1.747,917,1.952,1036,1.226]],["body/additional-documentation/chess-tutorial.html",[0,0.306,4,0.348,8,1.231,9,0.383,11,0.495,16,1.712,20,0.416,23,0.687,26,0.028,27,0.265,28,0.083,30,0.198,31,0.01,32,0.006,33,0.003,36,0.495,39,1.079,41,0.546,42,0.383,45,2.685,47,1.087,49,0.214,53,0.61,54,2.963,55,0.548,57,1.452,64,0.411,65,0.495,68,0.355,76,1.467,77,0.383,79,0.548,80,0.81,84,0.696,86,1.173,87,0.696,94,0.886,95,0.61,100,0.886,101,0.546,103,0.383,106,1.674,107,1.248,110,0.442,118,0.452,127,0.907,129,0.832,130,0.693,131,0.329,132,0.696,133,0.452,135,0.696,136,1.705,147,0.415,148,2.874,151,0.306,152,1.329,153,0.933,154,0.61,156,0.687,157,0.546,158,1.863,160,2.071,164,1.017,165,0.696,169,1.834,170,0.495,172,1.346,174,0.452,178,1.34,181,1.136,183,1.136,184,0.696,186,2.315,189,1.417,193,0.452,196,1.485,197,0.383,199,1.136,205,1.329,206,1.052,213,1.248,214,0.907,222,0.744,223,1.211,224,0.495,225,0.452,226,0.744,229,0.978,230,0.699,238,1.052,240,1.949,241,0.495,243,0.59,245,1.454,246,0.61,247,0.687,248,0.636,250,0.285,251,1.619,253,0.495,254,2.982,255,1.619,257,0.696,259,0.696,263,0.745,265,0.329,266,1.81,273,1.338,275,1.695,276,2.039,279,0.696,280,1.81,281,0.415,285,0.696,288,0.81,289,0.306,292,0.61,296,0.495,297,0.886,298,0.495,307,1.248,308,1.329,310,0.933,314,0.636,316,0.329,324,0.355,325,0.886,329,1.863,333,0.355,334,0.285,341,0.744,343,1.485,344,2.112,345,0.696,348,1.094,353,0.61,355,1.248,359,0.696,360,1.094,366,0.886,370,0.744,371,1.248,374,1.695,379,0.687,382,1.094,385,0.81,388,0.81,390,0.546,391,1.1,392,0.696,394,0.61,395,0.495,398,0.61,399,0.415,407,0.546,408,0.355,409,0.495,410,0.546,413,1.863,414,0.61,415,0.61,417,0.61,427,1.387,430,0.864,438,0.355,440,0.495,444,0.61,448,0.753,450,0.495,462,0.415,479,0.452,480,0.383,482,0.696,483,1.831,486,0.696,487,1.81,488,2.039,492,0.61,497,0.61,499,0.745,505,1.417,508,0.546,513,0.452,516,2.408,518,0.696,520,0.546,532,0.61,533,1.34,534,0.495,542,0.61,551,0.978,552,0.61,562,0.696,563,0.546,568,1.619,569,0.61,571,1.094,573,2.377,574,0.696,575,0.696,577,0.696,580,1.688,588,0.546,591,0.452,597,0.452,599,1.094,605,3.853,607,0.696,609,0.61,611,0.546,616,1.1,617,0.933,647,0.61,654,0.696,658,0.696,659,3.541,673,0.546,685,0.696,694,3.881,695,3.974,696,0.886,698,0.61,705,1.619,719,0.81,744,0.696,755,0.696,756,1.248,787,1.248,808,0.61,818,0.81,819,0.696,825,3.666,849,2.516,853,1.695,859,1.81,863,0.61,864,1.619,869,1.81,879,0.696,881,0.61,885,0.696,890,0.886,905,0.61,909,1.094,911,0.696,914,0.696,917,2.691,920,1.695,927,0.696,930,0.61,934,0.696,957,0.546,965,1.485,966,0.61,973,0.61,986,0.546,990,0.696,1004,0.61,1011,1.204,1041,0.696,1044,2.874,1049,1.688,1052,1.81,1053,0.546,1054,1.695,1057,0.696,1060,1.542,1064,0.696,1071,0.546,1072,0.696,1073,2.377,1074,2.377,1075,1.329,1076,0.978,1084,1.695,1087,0.61,1093,1.094,1122,0.61,1133,1.248,1137,1.248,1153,1.094,1155,1.485,1159,1.248,1160,1.81,1161,1.81,1168,0.61,1175,3.402,1176,0.61,1180,0.61,1189,0.696,1190,0.696,1191,0.696,1198,1.695,1207,1.094,1210,0.696,1216,0.696,1224,0.696,1229,0.696,1233,1.094,1237,0.696,1238,0.696,1242,0.696,1243,0.696,1244,0.61,1245,0.696,1248,0.696,1254,0.696,1255,0.696,1256,0.696,1263,1.248,1265,0.696,1267,1.094,1268,0.696,1272,0.696,1280,0.696,1284,0.696,1285,0.827,1286,3.41,1287,5.78,1288,0.696,1289,0.827,1290,0.827,1291,1.482,1292,2.013,1293,4.206,1294,1.482,1295,3.41,1296,4.354,1297,2.453,1298,4.354,1299,3.648,1300,2.013,1301,3.648,1302,1.482,1303,0.827,1304,0.827,1305,0.61,1306,2.013,1307,0.827,1308,0.827,1309,0.827,1310,1.482,1311,1.094,1312,0.827,1313,1.482,1314,2.013,1315,0.827,1316,0.827,1317,3.648,1318,2.453,1319,1.482,1320,0.827,1321,2.453,1322,1.482,1323,0.827,1324,4.041,1325,0.827,1326,0.827,1327,1.482,1328,2.013,1329,0.827,1330,0.827,1331,0.827,1332,0.827,1333,0.827,1334,0.827,1335,1.482,1336,0.827,1337,2.013,1338,2.013,1339,0.827,1340,1.482,1341,0.827,1342,0.827,1343,1.482,1344,1.482,1345,0.827,1346,0.827,1347,0.827,1348,0.827,1349,1.482,1350,0.827,1351,0.827,1352,0.827,1353,0.827,1354,2.823,1355,0.696,1356,2.013,1357,2.453,1358,3.138,1359,0.827,1360,0.827,1361,2.453,1362,0.827,1363,0.827,1364,1.482,1365,0.827,1366,0.827,1367,0.827,1368,0.827,1369,0.827,1370,1.482,1371,2.823,1372,0.827,1373,0.827,1374,0.827,1375,0.827,1376,1.482,1377,2.823,1378,1.248,1379,0.827,1380,0.827,1381,0.696,1382,0.827,1383,0.827,1384,0.827,1385,0.827,1386,1.482,1387,1.482,1388,0.827,1389,0.827,1390,0.827,1391,0.827,1392,0.696,1393,0.827,1394,0.827,1395,0.827,1396,0.827,1397,0.827,1398,0.827,1399,1.482,1400,0.827,1401,5.08,1402,0.827,1403,0.827,1404,0.827,1405,0.827,1406,0.827,1407,0.827,1408,2.642,1409,0.827,1410,0.827,1411,0.827,1412,3.138,1413,2.065,1414,0.696,1415,0.696,1416,0.827,1417,3.856,1418,2.823,1419,0.827,1420,0.696,1421,0.827,1422,0.827,1423,0.827,1424,1.482,1425,0.827,1426,0.827,1427,0.827,1428,0.827,1429,0.827,1430,0.827,1431,1.482,1432,1.482,1433,0.827,1434,0.827,1435,1.482,1436,0.827,1437,0.827,1438,0.827,1439,0.827,1440,0.827,1441,0.827,1442,0.827,1443,0.827,1444,0.827,1445,0.827,1446,1.695,1447,0.827,1448,0.827,1449,1.482,1450,0.827,1451,0.827,1452,1.482,1453,1.482,1454,0.827,1455,0.827,1456,1.482,1457,2.013,1458,0.827,1459,1.482,1460,0.827,1461,1.482,1462,0.827,1463,0.827,1464,0.827,1465,0.827,1466,0.827,1467,0.827,1468,1.482,1469,1.482,1470,0.827,1471,0.827,1472,0.827,1473,0.827,1474,0.827,1475,0.827,1476,0.827,1477,0.696,1478,1.482,1479,0.827,1480,0.827,1481,0.827,1482,0.827,1483,0.827,1484,0.827,1485,0.827,1486,0.827,1487,0.827,1488,0.827,1489,0.696,1490,0.827,1491,1.482,1492,0.827,1493,0.827,1494,0.827,1495,3.648,1496,0.696,1497,0.827,1498,0.827,1499,0.827,1500,2.065,1501,0.827,1502,1.482,1503,0.827,1504,0.827,1505,0.827,1506,0.827,1507,2.013,1508,0.827,1509,0.827,1510,0.827,1511,0.827,1512,0.827,1513,1.482,1514,0.827,1515,1.482,1516,0.827,1517,0.827,1518,1.482,1519,0.696,1520,0.696,1521,0.827,1522,0.827,1523,0.827,1524,1.482,1525,0.827,1526,0.696,1527,0.827,1528,0.827,1529,0.827,1530,0.827,1531,0.827,1532,0.827,1533,0.827,1534,0.827,1535,0.696,1536,0.827,1537,0.827,1538,0.827,1539,0.827,1540,0.827,1541,0.827,1542,0.827,1543,2.823,1544,2.065,1545,0.827,1546,0.827,1547,1.482,1548,0.827,1549,2.013,1550,0.696,1551,1.482,1552,0.827,1553,0.827,1554,0.827,1555,0.827,1556,0.696,1557,0.827,1558,0.827,1559,0.827,1560,0.827,1561,0.827,1562,0.827,1563,0.827,1564,0.827,1565,0.827,1566,0.827,1567,0.827,1568,1.482,1569,1.482,1570,0.827,1571,0.827,1572,0.827,1573,0.827,1574,0.827,1575,0.827,1576,0.827,1577,0.827,1578,0.827,1579,0.827,1580,0.827,1581,0.827,1582,0.827,1583,0.827,1584,0.827,1585,0.827,1586,0.827,1587,0.827,1588,0.827,1589,0.827,1590,0.827,1591,2.823,1592,0.827,1593,0.827,1594,0.827,1595,0.827,1596,1.482,1597,0.827,1598,1.482,1599,0.827,1600,1.482,1601,0.827,1602,0.827,1603,0.827,1604,0.827,1605,0.827]],["title/additional-documentation/translating-react-code.html",[151,0.867,153,1.086,265,0.933,897,1.729,1036,1.086]],["body/additional-documentation/translating-react-code.html",[2,0.32,9,1.341,18,0.723,20,0.375,23,1.671,26,0.028,28,0.361,30,0.436,31,0.007,32,0.012,33,0.007,36,0.49,41,1.199,47,1.809,54,1.911,55,1.661,57,1.436,62,0.779,64,1.001,65,2.687,68,0.779,70,1.77,77,1.235,78,1.521,79,1.07,83,0.912,86,0.996,92,1.581,97,1.087,100,1.087,103,0.842,104,2.082,106,0.723,110,1.601,115,1.53,118,1.581,127,2.116,129,0.725,130,0.996,136,1.928,137,1.53,139,1.341,140,1.087,143,1.341,147,0.912,148,1.199,151,2.28,152,1.199,153,2.082,154,1.341,156,1.906,157,1.911,164,0.542,169,1.788,173,1.436,174,0.993,175,1.53,176,1.199,178,1.581,179,0.842,181,0.842,183,0.842,188,1.971,189,0.912,193,0.993,195,0.625,201,1.341,206,1.547,214,1.334,216,1.199,220,1.199,223,0.779,224,1.731,229,1.199,230,0.405,238,1.547,240,1.341,247,1.341,248,1.241,251,1.911,253,1.087,256,0.779,263,0.672,264,2.157,273,1.684,276,2.157,281,0.912,288,0.993,289,1.07,290,1.199,297,1.087,298,1.087,300,1.199,308,1.199,309,1.53,310,1.906,314,0.779,320,1.453,322,1.341,324,0.779,326,0.927,327,1.731,331,2.157,333,1.547,334,1.415,342,1.199,344,0.912,365,1.906,370,0.912,385,1.581,388,0.993,391,0.993,394,1.341,395,2.157,397,1.341,399,2.066,401,1.087,402,1.53,403,3.037,405,1.53,409,1.087,413,0.993,430,0.779,435,1.199,436,1.087,437,1.341,440,1.087,442,1.199,443,1.199,445,1.53,462,1.453,483,1.453,491,1.53,493,1.731,505,0.912,515,1.199,517,1.53,533,2.248,534,1.087,551,1.199,568,1.199,571,2.136,579,0.912,597,2.455,599,1.341,616,0.993,617,1.341,623,0.912,715,1.341,729,1.53,733,2.437,734,1.341,736,1.53,818,0.993,822,1.911,881,1.341,890,1.087,896,1.53,897,1.341,900,1.53,935,1.53,961,1.911,965,1.341,986,2.381,991,1.53,998,1.53,1003,1.53,1011,1.087,1026,1.341,1035,1.53,1044,2.381,1049,2.687,1060,1.581,1063,1.53,1075,1.911,1122,1.341,1124,2.437,1132,2.437,1136,1.53,1142,1.53,1146,2.716,1148,1.087,1160,1.341,1170,1.53,1176,2.136,1180,1.341,1186,1.53,1279,1.341,1288,2.437,1305,1.341,1311,1.341,1355,1.53,1378,1.53,1381,1.53,1392,1.53,1408,2.437,1413,1.53,1414,1.53,1446,2.437,1489,1.53,1496,1.53,1500,1.53,1519,1.53,1520,1.53,1526,1.53,1535,2.437,1544,3.037,1550,1.53,1606,1.817,1607,1.817,1608,1.817,1609,1.817,1610,1.817,1611,1.817,1612,2.437,1613,1.817,1614,1.817,1615,1.817,1616,1.817,1617,1.817,1618,1.817,1619,1.817,1620,1.817,1621,1.817,1622,2.894,1623,5.809,1624,4.787,1625,1.817,1626,1.817,1627,1.817,1628,2.894,1629,2.437,1630,1.817,1631,1.817,1632,1.817,1633,1.817,1634,1.817,1635,1.817,1636,1.817,1637,1.817,1638,1.817,1639,1.817,1640,1.817,1641,1.817,1642,3.607,1643,2.894,1644,2.894,1645,1.817,1646,1.817,1647,2.894,1648,4.114,1649,3.607,1650,1.817,1651,2.894,1652,1.817,1653,1.817,1654,1.817,1655,1.817,1656,1.817,1657,1.817,1658,1.817,1659,1.817,1660,1.817,1661,1.817,1662,2.894,1663,1.817,1664,1.817,1665,1.817,1666,1.817,1667,1.817,1668,1.817,1669,1.817,1670,1.817,1671,1.817,1672,1.817,1673,1.817,1674,1.817,1675,1.817,1676,1.817,1677,1.817,1678,1.817,1679,1.817,1680,1.817,1681,1.817,1682,1.817,1683,1.817,1684,1.817,1685,1.817,1686,1.817,1687,1.817,1688,1.817,1689,3.037,1690,1.817,1691,1.53,1692,1.817,1693,1.817,1694,1.817,1695,1.817,1696,1.817,1697,1.817,1698,2.894,1699,1.817,1700,1.817,1701,1.817,1702,1.817,1703,1.817]],["title/additional-documentation/testing.html",[265,1.209,428,2.005,1036,1.408]],["body/additional-documentation/testing.html",[16,1.316,26,0.029,31,0.011,32,0.016,33,0.011,36,0.52,39,1.557,42,1.215,45,3.121,47,1.349,49,1.635,50,1.934,57,1.043,64,0.727,70,0.969,76,1.568,77,0.677,83,1.923,86,1.318,93,1.432,99,2.207,127,2.113,129,1.07,130,0.902,140,1.568,151,2.046,156,1.215,169,1.043,172,1.124,173,1.043,176,1.73,181,1.215,189,1.923,195,0.902,196,1.934,206,1.124,223,1.124,226,1.316,230,1.18,231,2.207,243,1.043,263,1.417,268,1.934,273,1.47,278,2.093,286,1.432,333,1.124,397,1.934,410,1.73,413,2.093,427,1.585,428,3.496,443,1.73,448,1.271,462,1.316,479,1.432,494,3.943,499,0.969,505,1.316,569,1.934,579,1.316,591,1.432,592,2.207,612,1.73,646,1.934,650,1.934,696,1.568,698,1.934,708,2.529,719,2.093,764,1.568,768,1.934,786,2.207,842,1.934,849,1.934,861,1.934,910,2.207,973,1.934,1029,2.207,1043,2.207,1044,1.73,1049,2.291,1060,1.432,1070,3.225,1076,1.73,1087,1.934,1093,3.34,1145,1.73,1161,1.934,1167,2.207,1168,1.934,1207,1.934,1215,2.207,1235,3.225,1244,1.934,1267,1.934,1274,2.207,1279,1.934,1305,1.934,1311,1.934,1415,2.207,1420,2.207,1477,3.225,1556,2.207,1612,2.207,1629,4.192,1689,2.207,1691,2.207,1704,3.831,1705,3.831,1706,2.621,1707,2.621,1708,2.621,1709,2.621,1710,2.621,1711,2.621,1712,2.621,1713,2.621,1714,2.621,1715,2.621,1716,2.621,1717,2.621,1718,2.621,1719,2.621,1720,2.621,1721,2.621,1722,2.621,1723,3.831,1724,3.831,1725,3.831,1726,2.621,1727,2.621,1728,2.621,1729,2.621,1730,3.831,1731,3.831,1732,2.621,1733,2.621,1734,2.621,1735,2.621,1736,2.621,1737,4.527,1738,2.621,1739,2.621,1740,2.621,1741,2.621,1742,2.621,1743,4.527,1744,2.621,1745,2.621,1746,2.621,1747,2.621,1748,2.621,1749,2.621,1750,2.621,1751,2.621,1752,2.621,1753,2.621,1754,2.621,1755,2.621,1756,2.621]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["0",{"_index":343,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1404,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.25",{"_index":1529,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":345,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0.8.26",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["02",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["09b26c9",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":344,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"injectables/SkyhookDndService.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1.0.10",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["1.2.1",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["1.3.3",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["1.9.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":838,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":825,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["11",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["12.5",{"_index":1387,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["14",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":782,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["1px",{"_index":1383,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":148,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2/2",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":834,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":941,"title":{},"body":{"index.html":{}}}],["3",{"_index":1011,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1500,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4/4",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1320,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1413,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.5",{"_index":1580,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5/5",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["505",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["506",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["50f7dc9",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["54px",{"_index":1322,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1391,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1688,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6.0.0",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1300,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["66",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["700",{"_index":1514,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1325,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["7626565",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":787,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["8.0.0",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["8/8",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["874723a",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["8x8",{"_index":1376,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["9.0.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["9c7d4a7",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":65,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":856,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1370,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstraction",{"_index":904,"title":{},"body":{"index.html":{}}}],["accept",{"_index":1069,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["access",{"_index":1279,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["accessors",{"_index":632,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1651,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achieve",{"_index":1345,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":528,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["actions",{"_index":589,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":1607,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["actually",{"_index":934,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["add(teardown",{"_index":81,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["add(teardownlogic",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["added",{"_index":1392,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["adding",{"_index":1039,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["additional",{"_index":1036,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{}}],["addsubscription",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["advanced",{"_index":1140,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advantage",{"_index":892,"title":{},"body":{"index.html":{}}}],["advice",{"_index":267,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affected",{"_index":1341,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":1046,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["aliases",{"_index":1014,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1359,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":1485,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allowing",{"_index":635,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["allows",{"_index":324,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["already",{"_index":370,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":558,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["alternate",{"_index":1080,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alternatives",{"_index":952,"title":{},"body":{"index.html":{}}}],["always",{"_index":1233,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambitious",{"_index":915,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1456,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchorx",{"_index":336,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchory",{"_index":337,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["angular's",{"_index":1342,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["angular/core",{"_index":849,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["angular/core/testing",{"_index":1727,"title":{},"body":{"additional-documentation/testing.html":{}}}],["angular/platform",{"_index":1728,"title":{},"body":{"additional-documentation/testing.html":{}}}],["another",{"_index":611,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1493,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anything",{"_index":292,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":618,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":61,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":1612,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["apis",{"_index":876,"title":{},"body":{"index.html":{}}}],["app",{"_index":1074,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.ts",{"_index":1112,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":619,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["appearance",{"_index":1537,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":606,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["applies",{"_index":469,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["apply",{"_index":371,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["applying",{"_index":1234,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["appmodule",{"_index":1045,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1656,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropriate",{"_index":734,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["arbitrarily",{"_index":1351,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arbitrary",{"_index":1700,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["area",{"_index":925,"title":{},"body":{"index.html":{}}}],["aren't",{"_index":985,"title":{},"body":{"index.html":{}}}],["argument",{"_index":733,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["arguments",{"_index":1660,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":186,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":957,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1375,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":1124,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":305,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["asking",{"_index":737,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["assembly",{"_index":1097,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":550,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["assigning",{"_index":730,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["associated",{"_index":1685,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assumes",{"_index":1302,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assuming",{"_index":1579,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumptions",{"_index":1536,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":1244,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["asynchronous",{"_index":1698,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":1155,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attached",{"_index":1190,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attaching",{"_index":1339,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["attention",{"_index":1363,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automatic",{"_index":294,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["automatically",{"_index":418,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["available",{"_index":243,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["avoid",{"_index":576,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["avoiding",{"_index":725,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["aware",{"_index":1664,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["backend",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["backend';generally",{"_index":1110,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["backend's",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend.simulatebegindrag([source",{"_index":1747,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatedrop",{"_index":1752,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulateenddrag",{"_index":1753,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatehover([target",{"_index":1749,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendexample",{"_index":1722,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendfactory",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryinput",{"_index":34,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["backendinput",{"_index":67,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["backendnext",{"_index":862,"title":{},"body":{"index.html":{}}}],["backendorbackendfactory",{"_index":703,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["backends",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["backendyou",{"_index":1037,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":1248,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1337,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":953,"title":{},"body":{"index.html":{}}}],["base",{"_index":75,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["base.ts",{"_index":671,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["based",{"_index":281,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["basic",{"_index":1311,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["basics",{"_index":1304,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["batches",{"_index":887,"title":{},"body":{"index.html":{}}}],["bbb",{"_index":1445,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["become",{"_index":660,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["becomes",{"_index":211,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["before",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["beforeeach",{"_index":1736,"title":{},"body":{"additional-documentation/testing.html":{}}}],["beforeeach(async",{"_index":1734,"title":{},"body":{"additional-documentation/testing.html":{}}}],["begindrag",{"_index":462,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["begindrag(monitor",{"_index":564,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1418,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":623,"title":{},"body":{"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1426,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["being",{"_index":247,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["belong",{"_index":992,"title":{},"body":{"index.html":{}}}],["below",{"_index":1215,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["benefit",{"_index":1000,"title":{},"body":{"index.html":{}}}],["best",{"_index":540,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1435,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":342,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":1169,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1591,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1353,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1641,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["binding",{"_index":468,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1491,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1296,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindly",{"_index":481,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":1354,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blocks",{"_index":908,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["board",{"_index":605,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcomponent",{"_index":1299,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecomponent",{"_index":1543,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["body",{"_index":1333,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerplate",{"_index":1422,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bones",{"_index":954,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":66,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1334,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["border",{"_index":1382,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":978,"title":{},"body":{"index.html":{}}}],["both",{"_index":534,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":361,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["bounding",{"_index":1202,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":1221,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1289,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["breaking",{"_index":1455,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity's",{"_index":1389,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1423,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":471,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["browse",{"_index":1009,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":1087,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["browsers",{"_index":519,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["browsing",{"_index":1079,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["bug",{"_index":762,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":1313,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":946,"title":{},"body":{"index.html":{}}}],["building",{"_index":853,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bump",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["c.candrop",{"_index":1587,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdragging",{"_index":171,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isover",{"_index":1586,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":942,"title":{},"body":{"index.html":{}}}],["caf5e2e",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":408,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["callback",{"_index":92,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["callbacks",{"_index":188,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["called",{"_index":179,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["calling",{"_index":1118,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["came",{"_index":1534,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":1122,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":475,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":582,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":655,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1457,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1463,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingstate",{"_index":338,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":602,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cards",{"_index":932,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1280,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{}}}],["cases",{"_index":194,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["cat",{"_index":1247,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["cats",{"_index":1246,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["center",{"_index":1360,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":200,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":502,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["change",{"_index":206,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["changelog",{"_index":749,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["changing",{"_index":1263,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["character",{"_index":1316,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":591,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["checking",{"_index":663,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["checks",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chess",{"_index":917,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1397,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":508,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choose",{"_index":180,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["circumstances",{"_index":539,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":1044,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["classes",{"_index":673,"title":{},"body":{"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["clean",{"_index":718,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["clearer",{"_index":1448,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearly",{"_index":1411,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":1084,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":306,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["code",{"_index":153,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebase",{"_index":993,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1590,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":1648,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collect((props",{"_index":1668,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collected",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1338,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1328,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["columns",{"_index":1385,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combination",{"_index":1252,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["combine",{"_index":1674,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comes",{"_index":1667,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commence",{"_index":1062,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":756,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["commits",{"_index":755,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":672,"title":{},"body":{"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["community",{"_index":999,"title":{},"body":{"index.html":{}}}],["compared",{"_index":1617,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compatibility",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["compatible",{"_index":657,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["complete",{"_index":1305,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["completions",{"_index":1143,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["complex",{"_index":854,"title":{},"body":{"index.html":{}}}],["component",{"_index":273,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component's",{"_index":443,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1626,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["component.source.gethandlerid",{"_index":1744,"title":{},"body":{"additional-documentation/testing.html":{}}}],["component.target.gethandlerid",{"_index":1745,"title":{},"body":{"additional-documentation/testing.html":{}}}],["componentfixture",{"_index":1725,"title":{},"body":{"additional-documentation/testing.html":{}}}],["components",{"_index":189,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["composing",{"_index":1652,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehensive",{"_index":898,"title":{},"body":{"index.html":{}}}],["comprehensively",{"_index":1134,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["compute",{"_index":1481,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["computed",{"_index":1540,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":1645,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["concepts",{"_index":1059,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["conceptually",{"_index":1523,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concerned",{"_index":1352,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configuration",{"_index":889,"title":{},"body":{"index.html":{}}}],["configure",{"_index":1706,"title":{},"body":{"additional-documentation/testing.html":{}}}],["configuring",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["confusing",{"_index":1520,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["confusion",{"_index":634,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["connect",{"_index":399,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsource",{"_index":1628,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":402,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornode",{"_index":406,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsource",{"_index":403,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornode",{"_index":424,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdroptarget",{"_index":624,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornode",{"_index":626,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connected",{"_index":436,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connecting",{"_index":1148,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection",{"_index":78,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection's",{"_index":1149,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.unsubscribe",{"_index":709,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["connectionbase",{"_index":72,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscribe",{"_index":1659,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connections",{"_index":1146,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectors",{"_index":1686,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connects",{"_index":1682,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consider",{"_index":1038,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["considered",{"_index":594,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["console.log('dropped",{"_index":1213,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["const",{"_index":413,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["constant",{"_index":1504,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants",{"_index":1513,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.ts",{"_index":1506,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["construct",{"_index":1716,"title":{},"body":{"additional-documentation/testing.html":{}}}],["constructor",{"_index":1207,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["constructor(private",{"_index":1160,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["constructors",{"_index":721,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["consumers",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["containercomponent",{"_index":1393,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":490,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["context",{"_index":765,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":994,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":1182,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["convenient",{"_index":91,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{}}}],["conventional",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":1403,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cookie",{"_index":963,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1379,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1401,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.ts",{"_index":1402,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordinate",{"_index":302,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{}}}],["coordinates",{"_index":307,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copy",{"_index":515,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["copying",{"_index":523,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["core",{"_index":764,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["core's",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["cormacrelf",{"_index":979,"title":{},"body":{"index.html":{}}}],["corollary",{"_index":731,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["correctly",{"_index":766,"title":{},"body":{"changelog.html":{},"additional-documentation/quickstart.html":{}}}],["corresponds",{"_index":524,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["couples",{"_index":578,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["course",{"_index":1613,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["coverage",{"_index":821,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":238,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":1098,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["created",{"_index":1199,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["createdefaultmultibackend",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["creates",{"_index":435,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["createtestbackend",{"_index":1723,"title":{},"body":{"additional-documentation/testing.html":{}}}],["createtouchbackend",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["creating",{"_index":1145,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["css",{"_index":869,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":253,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currently",{"_index":646,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["currentposition",{"_index":1459,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":390,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":210,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["customisations",{"_index":512,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["customise",{"_index":1210,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customize",{"_index":1596,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":964,"title":{},"body":{"index.html":{}}}],["d",{"_index":1721,"title":{},"body":{"additional-documentation/testing.html":{}}}],["d14b101",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["dan",{"_index":855,"title":{},"body":{"index.html":{}}}],["data",{"_index":227,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1599,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1508,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadline",{"_index":969,"title":{},"body":{"index.html":{}}}],["debug",{"_index":63,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"miscellaneous/variables.html":{}}}],["decisions",{"_index":1278,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declarations",{"_index":698,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["declared",{"_index":1661,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorating",{"_index":1647,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorators",{"_index":1654,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreased",{"_index":373,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1347,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":195,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["defer",{"_index":1702,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["define",{"_index":552,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["defined",{"_index":479,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["definitions",{"_index":1111,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degradation",{"_index":622,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["deleting",{"_index":921,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1133,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["demonstrations",{"_index":950,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1621,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["depend",{"_index":1697,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dependencies",{"_index":801,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["dependency",{"_index":786,"title":{},"body":{"changelog.html":{},"additional-documentation/testing.html":{}}}],["depending",{"_index":255,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["depends",{"_index":1008,"title":{},"body":{"index.html":{}}}],["derive",{"_index":1259,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describe",{"_index":1501,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["describe(mycomponent.name",{"_index":1729,"title":{},"body":{"additional-documentation/testing.html":{}}}],["described",{"_index":1708,"title":{},"body":{"additional-documentation/testing.html":{}}}],["describing",{"_index":567,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["description",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{}}}],["designed",{"_index":237,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["desirable",{"_index":377,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":1085,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["desktops",{"_index":1086,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":715,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscribe",{"_index":717,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["destroyed",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["destroying",{"_index":1171,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["destructive",{"_index":529,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["details",{"_index":592,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/testing.html":{}}}],["detection",{"_index":612,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/testing.html":{}}}],["determine",{"_index":584,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devices",{"_index":1082,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagramming",{"_index":936,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":476,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["difference",{"_index":1642,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["differences",{"_index":1614,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["different",{"_index":310,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["differently",{"_index":1731,"title":{},"body":{"additional-documentation/testing.html":{}}}],["difficult",{"_index":1560,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["directive",{"_index":320,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directives",{"_index":322,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["directly",{"_index":409,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["directory",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["disappears",{"_index":1494,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discover",{"_index":1236,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discussed",{"_index":1003,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["discussion",{"_index":654,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dispatched",{"_index":503,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displacement",{"_index":684,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":280,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dist",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["distinctuntilchanged",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["div",{"_index":1357,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["divs",{"_index":1368,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["dnd's",{"_index":732,"title":{},"body":{"injectables/SkyhookDndService.html":{},"changelog.html":{}}}],["dnd.dragsource(\"item",{"_index":1634,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(types",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dock",{"_index":354,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["docs",{"_index":309,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["documentation",{"_index":822,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["documented",{"_index":753,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["doesn't",{"_index":388,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["doing",{"_index":577,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dom",{"_index":77,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["don't",{"_index":183,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":1176,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":930,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["drag/drop",{"_index":913,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":738,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["drag_drop_backend",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_debug_mode",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_options",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_global_context",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manager",{"_index":842,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["dragdropmanager",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["draggable",{"_index":297,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragged",{"_index":248,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragging",{"_index":172,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["draggingclassapplied",{"_index":1732,"title":{},"body":{"additional-documentation/testing.html":{}}}],["draglayer",{"_index":192,"title":{"interfaces/DragLayer.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscription",{"_index":728,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["draglayer.listen",{"_index":242,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayermonitor",{"_index":244,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":330,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"source",{"_index":1218,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirective",{"_index":321,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewoptions",{"_index":332,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource",{"_index":326,"title":{"interfaces/DragSource.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource's",{"_index":474,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource(\"item",{"_index":1627,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(type",{"_index":729,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":1241,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1526,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settype",{"_index":1703,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsource",{"_index":1684,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"source",{"_index":1231,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedecorator",{"_index":1015,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcedirective",{"_index":463,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcefactory",{"_index":1017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcemonitor",{"_index":472,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":596,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdragging",{"_index":1527,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourceoptions",{"_index":425,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":439,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcespec.begindrag",{"_index":282,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetype",{"_index":464,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":968,"title":{},"body":{"index.html":{}}}],["draw",{"_index":938,"title":{},"body":{"index.html":{}}}],["drill",{"_index":929,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1415,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop",{"_index":427,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop(monitor",{"_index":656,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":514,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropped",{"_index":563,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropping",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropresult",{"_index":509,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["drops",{"_index":1486,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptarget",{"_index":393,"title":{"interfaces/DropTarget.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptarget's",{"_index":642,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(types",{"_index":747,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["droptarget.listen",{"_index":1573,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetdecorator",{"_index":1018,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetdirective",{"_index":629,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["droptargetfactory",{"_index":1019,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetmonitor",{"_index":640,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1574,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isover",{"_index":1575,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec",{"_index":89,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["droptargetspec.candrop",{"_index":1254,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1284,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettype",{"_index":630,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["droptargettypes",{"_index":631,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":108,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pipe",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":272,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplication",{"_index":262,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duration",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["during",{"_index":549,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1464,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1466,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynamic",{"_index":442,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dynamically",{"_index":432,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["e.g",{"_index":1225,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":1060,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["earlier",{"_index":1572,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easier",{"_index":457,"title":{},"body":{"interfaces/DragSource.html":{}}}],["easily",{"_index":410,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["easy",{"_index":708,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["editor",{"_index":1141,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["eee",{"_index":1249,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["effectively",{"_index":269,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["efficient",{"_index":1672,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":250,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["element's",{"_index":1201,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornode",{"_index":422,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1683,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeelement",{"_index":412,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elements",{"_index":224,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["elsewhere",{"_index":1414,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":1068,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["emits",{"_index":1509,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["empty",{"_index":387,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emulate",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enabled",{"_index":1102,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/disabled",{"_index":484,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["enablemouseevents",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["encapsulation",{"_index":1344,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encountered",{"_index":1115,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enddrag",{"_index":493,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":586,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ends",{"_index":235,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{}}}],["enough",{"_index":1349,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["enters",{"_index":886,"title":{},"body":{"index.html":{}}}],["entire",{"_index":1267,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["equality",{"_index":144,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":236,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonomic",{"_index":902,"title":{},"body":{"index.html":{}}}],["error",{"_index":1114,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1694,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["especially",{"_index":1192,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essentially",{"_index":134,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1679,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["etcthen",{"_index":1208,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["even",{"_index":288,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":492,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["events",{"_index":278,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["everything",{"_index":1186,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exact",{"_index":1717,"title":{},"body":{"additional-documentation/testing.html":{}}}],["exactly",{"_index":1272,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["example",{"_index":70,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["examples",{"_index":264,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1498,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execute",{"_index":1474,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["executing",{"_index":1471,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":191,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["existing",{"_index":202,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["exiting",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":547,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["expect(draggingclassapplied()).tobefalsy",{"_index":1754,"title":{},"body":{"additional-documentation/testing.html":{}}}],["expect(draggingclassapplied()).tobetruthy",{"_index":1748,"title":{},"body":{"additional-documentation/testing.html":{}}}],["experience",{"_index":621,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitly",{"_index":506,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["exported",{"_index":1095,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["exports",{"_index":699,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/quickstart.html":{}}}],["express",{"_index":1399,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["expresses",{"_index":1253,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["extended",{"_index":653,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["extends",{"_index":18,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["extra",{"_index":551,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["f5a19b8",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["f97738f",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":977,"title":{},"body":{"index.html":{}}}],["fairly",{"_index":1611,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["false",{"_index":59,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["familiar",{"_index":1303,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famous",{"_index":931,"title":{},"body":{"index.html":{}}}],["fancy",{"_index":1439,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1677,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":970,"title":{},"body":{"index.html":{}}}],["feature",{"_index":520,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["features",{"_index":867,"title":{},"body":{"index.html":{}}}],["few",{"_index":927,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figure",{"_index":1565,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":973,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["finished",{"_index":1307,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":187,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireaction",{"_index":1631,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1637,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fired",{"_index":1200,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["fires",{"_index":182,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["first",{"_index":1159,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fit",{"_index":877,"title":{},"body":{"index.html":{}}}],["five",{"_index":1655,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fix",{"_index":767,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":257,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fixes",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["fixture",{"_index":1730,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.componentinstance",{"_index":1741,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.debugelement.query(by.css('.dragging",{"_index":1733,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.detectchanges",{"_index":1743,"title":{},"body":{"additional-documentation/testing.html":{}}}],["flag",{"_index":485,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["flexible",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["flight",{"_index":879,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["floating",{"_index":1503,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":875,"title":{},"body":{"index.html":{}}}],["flows",{"_index":228,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["fly",{"_index":454,"title":{},"body":{"interfaces/DragSource.html":{}}}],["folder",{"_index":809,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["follow",{"_index":225,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["following",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["follows",{"_index":1216,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["font",{"_index":1318,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1329,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":713,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":1217,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":701,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/quickstart.html":{}}}],["forroot(backendorbackendfactory",{"_index":702,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["forrootto",{"_index":1051,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":991,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1306,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1673,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequently",{"_index":668,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1410,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendly",{"_index":878,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["friends",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["full",{"_index":891,"title":{},"body":{"index.html":{}}}],["function",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["functioning",{"_index":1657,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["functions",{"_index":298,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funky",{"_index":1604,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1286,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice",{"_index":1417,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1482,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1449,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["general",{"_index":299,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["getclientoffset",{"_index":674,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdifferencefrominitialoffset",{"_index":675,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":477,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["gethandlerid",{"_index":404,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":676,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":677,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":678,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitemtype",{"_index":679,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["gets",{"_index":609,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getsourceclientoffset",{"_index":680,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getstyle",{"_index":1335,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["getting",{"_index":748,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gifs",{"_index":951,"title":{},"body":{"index.html":{}}}],["github",{"_index":1004,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":1443,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["given",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gives",{"_index":1670,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["glance",{"_index":1522,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":220,"title":{},"body":{"interfaces/DragLayer.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1557,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":1408,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goals",{"_index":882,"title":{},"body":{"index.html":{}}}],["going",{"_index":659,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["good",{"_index":580,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":1235,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["graphical",{"_index":944,"title":{},"body":{"index.html":{}}}],["green",{"_index":1569,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplus",{"_index":561,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1377,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["grouping",{"_index":166,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["groupings",{"_index":453,"title":{},"body":{"interfaces/DragSource.html":{}}}],["guidance",{"_index":1558,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["guide",{"_index":1076,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["guidelines",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["habit",{"_index":724,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["handle",{"_index":296,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handled",{"_index":411,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["handler",{"_index":1477,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["handles",{"_index":1197,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["handlesquareclick",{"_index":1470,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(pos",{"_index":1452,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hanging",{"_index":185,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":1497,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["happens",{"_index":914,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happily",{"_index":149,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":575,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["having",{"_index":712,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["head",{"_index":1104,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavy",{"_index":1552,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1324,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":998,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["helpful",{"_index":1276,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["here",{"_index":617,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here's",{"_index":1446,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":384,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["high",{"_index":883,"title":{},"body":{"index.html":{}}}],["higher",{"_index":1643,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlighted",{"_index":1283,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinders",{"_index":1266,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":526,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":739,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["hold",{"_index":1400,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":744,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hooks",{"_index":1064,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizontal",{"_index":350,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["horse",{"_index":1605,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1356,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":93,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["hover(monitor",{"_index":667,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["hovered",{"_index":650,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["hovering",{"_index":647,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hovers",{"_index":669,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["html",{"_index":1332,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":197,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":71,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":554,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["https",{"_index":1601,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["i.e",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["icon",{"_index":562,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":286,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["idea",{"_index":581,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["identical",{"_index":1571,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifier",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1742,"title":{},"body":{"additional-documentation/testing.html":{}}}],["ie",{"_index":383,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":470,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illegal",{"_index":1475,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustrate",{"_index":1616,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["image",{"_index":205,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imaginary",{"_index":1109,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imagine",{"_index":1691,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["img",{"_index":414,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":415,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":417,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immediate",{"_index":421,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["immediately",{"_index":363,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":909,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["implementation",{"_index":1269,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["implemented",{"_index":1083,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["implementing",{"_index":1292,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["import",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["important",{"_index":290,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["importing",{"_index":1106,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imports",{"_index":1043,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["improvements",{"_index":1002,"title":{},"body":{"index.html":{}}}],["include",{"_index":1054,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["includes",{"_index":1094,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["including",{"_index":301,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["incorporate",{"_index":1551,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independent",{"_index":1394,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1559,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["indices",{"_index":1405,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["inferring",{"_index":538,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["information",{"_index":395,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initial",{"_index":685,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["initialized",{"_index":1050,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["initiated",{"_index":511,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{}}}],["inject",{"_index":1052,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectable",{"_index":705,"title":{"injectables/SkyhookDndService.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectables",{"_index":706,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["injected",{"_index":1649,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["injection",{"_index":768,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["injectiontoken",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":880,"title":{},"body":{"index.html":{}}}],["input",{"_index":276,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inputs",{"_index":331,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["inside",{"_index":314,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspired",{"_index":1065,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["install",{"_index":1720,"title":{},"body":{"additional-documentation/testing.html":{}}}],["installation",{"_index":860,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["installing",{"_index":1055,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["instance",{"_index":1053,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instead",{"_index":365,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instructions",{"_index":1119,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interaction",{"_index":1093,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["interactions",{"_index":910,"title":{},"body":{"index.html":{},"additional-documentation/testing.html":{}}}],["interactive",{"_index":1223,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["interactivity",{"_index":277,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["interest",{"_index":1608,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["interested",{"_index":1425,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["interesting",{"_index":1496,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["internally",{"_index":87,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["internals",{"_index":736,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["interpolate",{"_index":356,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introducing",{"_index":1437,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["investigate",{"_index":1209,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["isblack",{"_index":1409,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isdragging",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["isdragging(monitor",{"_index":593,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["isdraggingobj",{"_index":1275,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["isdraggingplain",{"_index":1273,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["ish.ts",{"_index":691,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":482,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isolate",{"_index":1712,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isolation",{"_index":1709,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isover",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(options",{"_index":643,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["issue",{"_index":997,"title":{},"body":{"index.html":{}}}],["issues",{"_index":989,"title":{},"body":{"index.html":{}}}],["it's",{"_index":568,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["it('should",{"_index":1746,"title":{},"body":{"additional-documentation/testing.html":{}}}],["item",{"_index":256,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["item's",{"_index":686,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["items",{"_index":513,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["itemsource",{"_index":1633,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1622,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtypes",{"_index":1507,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1510,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":566,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["jest",{"_index":1705,"title":{},"body":{"additional-documentation/testing.html":{}}}],["job",{"_index":1219,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jones",{"_index":1205,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["js",{"_index":535,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["jsx",{"_index":1680,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":604,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":486,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":559,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keys",{"_index":1271,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["kinds",{"_index":1092,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1287,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight's",{"_index":1424,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcomponent",{"_index":1293,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition",{"_index":1412,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1441,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knights",{"_index":1502,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsource",{"_index":1515,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":571,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1462,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":1258,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["large",{"_index":1189,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["largely",{"_index":894,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["last",{"_index":497,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastly",{"_index":1595,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":599,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":217,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["layers",{"_index":268,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/testing.html":{}}}],["lazy",{"_index":1047,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leaked",{"_index":726,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["learn",{"_index":362,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["learnable",{"_index":1562,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["learning",{"_index":971,"title":{},"body":{"index.html":{}}}],["leave",{"_index":184,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":355,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["let's",{"_index":1371,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lets",{"_index":215,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["level",{"_index":907,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1489,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["library",{"_index":961,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["license",{"_index":1005,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":743,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetime",{"_index":746,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["lifting",{"_index":1553,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightgoldenrodyellow",{"_index":1250,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["lightweight",{"_index":1420,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["limitations",{"_index":201,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpaper",{"_index":1127,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1323,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearly",{"_index":357,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liners",{"_index":1130,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["lines",{"_index":1597,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["link",{"_index":517,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/translating-react-code.html":{}}}],["linked",{"_index":1355,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["links",{"_index":939,"title":{},"body":{"index.html":{}}}],["list",{"_index":398,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":79,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscribe",{"_index":88,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":175,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapto",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["listens",{"_index":1713,"title":{},"body":{"additional-documentation/testing.html":{}}}],["lists",{"_index":603,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["literal",{"_index":644,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["little",{"_index":1518,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":1310,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lives",{"_index":873,"title":{},"body":{"index.html":{}}}],["load",{"_index":1238,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["loaded",{"_index":1048,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["log",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":487,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1598,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":190,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":1073,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["looking",{"_index":1170,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["looks",{"_index":1524,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["loops",{"_index":1373,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":1071,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lots",{"_index":710,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lower",{"_index":906,"title":{},"body":{"index.html":{}}}],["luna",{"_index":949,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1583,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.candrop());what",{"_index":1257,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["m.isdragging",{"_index":176,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["m.isover",{"_index":1256,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["macos",{"_index":923,"title":{},"body":{"index.html":{}}}],["made",{"_index":420,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["maintain",{"_index":1179,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["maintaining",{"_index":981,"title":{},"body":{"index.html":{}}}],["maintains",{"_index":126,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["make",{"_index":240,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["makes",{"_index":1535,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["making",{"_index":616,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["managed",{"_index":1658,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manager",{"_index":1737,"title":{},"body":{"additional-documentation/testing.html":{}}}],["manager.getbackend",{"_index":1739,"title":{},"body":{"additional-documentation/testing.html":{}}}],["mandated",{"_index":1615,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manually",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["many",{"_index":193,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1581,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapto",{"_index":177,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":352,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"changelog.html":{}}}],["matching",{"_index":32,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["math.abs(dx",{"_index":1468,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dy",{"_index":1469,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1407,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maximally",{"_index":901,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":714,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["mcfly",{"_index":1206,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["mean",{"_index":1367,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["meaning",{"_index":912,"title":{},"body":{"index.html":{}}}],["means",{"_index":353,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merging",{"_index":926,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":328,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["method",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{}}}],["methods",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":207,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minimal",{"_index":570,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["minimum",{"_index":778,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1012,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1007,"title":{},"body":{"index.html":{}}}],["mobile",{"_index":1081,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["model",{"_index":446,"title":{},"body":{"interfaces/DragSource.html":{}}}],["modern",{"_index":1380,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modify",{"_index":590,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["module",{"_index":696,"title":{"modules/SkyhookDndModule.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["module's",{"_index":1326,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modulenamemapper",{"_index":1707,"title":{},"body":{"additional-documentation/testing.html":{}}}],["modules",{"_index":697,"title":{"modules.html":{}},"body":{"modules/SkyhookDndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{}}}],["modulewithproviders",{"_index":704,"title":{},"body":{"modules/SkyhookDndModule.html":{}}}],["moment",{"_index":1478,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":1132,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":548,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":536,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["monitor.isdragging",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isover",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.ts",{"_index":313,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbase",{"_index":315,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitoring",{"_index":1151,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitors",{"_index":1261,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1663,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":289,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mounted",{"_index":610,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mouse",{"_index":226,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["movable",{"_index":918,"title":{},"body":{"index.html":{}}}],["move",{"_index":516,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moved",{"_index":233,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moveknight",{"_index":1488,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1431,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moves",{"_index":234,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moving",{"_index":601,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["much",{"_index":1447,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":1099,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multiple",{"_index":1653,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutable",{"_index":956,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":868,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":1113,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mycomponent",{"_index":1629,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["mydraggeditemtype",{"_index":544,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":555,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["neat",{"_index":1174,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessarily",{"_index":959,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":212,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["need",{"_index":39,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["nested",{"_index":504,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1268,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":366,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ng",{"_index":1346,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ng2",{"_index":967,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":1198,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1444,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodule",{"_index":1042,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchanges",{"_index":445,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":181,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ngoninit",{"_index":444,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1421,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":666,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1340,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":258,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngzone.run",{"_index":620,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["noble",{"_index":1454,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":203,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{}}}],["nodes",{"_index":940,"title":{},"body":{"index.html":{}}}],["nohtml5preview",{"_index":465,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":636,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["none",{"_index":518,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notable",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":1665,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":480,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nothing",{"_index":658,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notice",{"_index":1365,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["noticed",{"_index":1091,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["notified",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifies",{"_index":587,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["notifying",{"_index":740,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["now",{"_index":251,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["number",{"_index":341,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":334,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["objects",{"_index":147,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable",{"_index":178,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1675,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["observables",{"_index":1577,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["observe",{"_index":1576,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["obvious",{"_index":1561,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":369,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":1158,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["offers",{"_index":1070,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["offset",{"_index":347,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offsetx",{"_index":339,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsety",{"_index":340,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["once",{"_index":438,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["one",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ones",{"_index":1138,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["onload",{"_index":1239,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["onpush",{"_index":893,"title":{},"body":{"index.html":{}}}],["op",{"_index":1719,"title":{},"body":{"additional-documentation/testing.html":{}}}],["opacity",{"_index":374,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["operation",{"_index":317,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["operations",{"_index":1063,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["opposed",{"_index":651,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optimisation",{"_index":1260,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimise",{"_index":1264,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimises",{"_index":1270,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimization",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["option",{"_index":525,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["optional",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["optionally",{"_index":500,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["options",{"_index":69,"title":{},"body":{"interfaces/BackendInput.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTargetMonitor.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionshere",{"_index":1121,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1644,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["original",{"_index":385,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["originally",{"_index":1056,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["others",{"_index":857,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":319,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":859,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":139,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outside",{"_index":495,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["over",{"_index":263,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["overall",{"_index":1232,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1578,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyle",{"_index":1588,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["override",{"_index":595,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["overrides",{"_index":507,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":1010,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":510,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner's",{"_index":478,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["package",{"_index":795,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packages",{"_index":814,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["page",{"_index":265,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":1126,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["parameter",{"_index":543,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{}}}],["parent",{"_index":450,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["parentid",{"_index":447,"title":{},"body":{"interfaces/DragSource.html":{}}}],["part",{"_index":1075,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":397,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["particularly",{"_index":1282,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["parts",{"_index":1550,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pass",{"_index":333,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["passed",{"_index":532,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["paste",{"_index":1640,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["patterns",{"_index":1687,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["paying",{"_index":1362,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":785,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["per",{"_index":259,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectly",{"_index":1541,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":209,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["performance",{"_index":613,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":569,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["picked",{"_index":1532,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["piece",{"_index":266,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pieces",{"_index":919,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["pipe",{"_index":1245,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipeline",{"_index":948,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":1277,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["place",{"_index":588,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["placed",{"_index":1395,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["places",{"_index":665,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["placing",{"_index":1398,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":68,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["planning",{"_index":291,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["play",{"_index":1309,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["players",{"_index":1533,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenty",{"_index":962,"title":{},"body":{"index.html":{}}}],["plural",{"_index":637,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1361,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":645,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":1195,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["populated",{"_index":1701,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["posing",{"_index":1220,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["position",{"_index":254,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibile",{"_index":311,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possible",{"_index":895,"title":{},"body":{"index.html":{}}}],["potential",{"_index":1001,"title":{},"body":{"index.html":{}}}],["power",{"_index":975,"title":{},"body":{"index.html":{}}}],["powered",{"_index":858,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":966,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practice",{"_index":287,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["precisely",{"_index":888,"title":{},"body":{"index.html":{}}}],["presents",{"_index":1610,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserves",{"_index":1545,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pressed",{"_index":560,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":537,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":199,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previews",{"_index":295,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["previously",{"_index":434,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primary",{"_index":1646,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["private",{"_index":1556,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["probably",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":996,"title":{},"body":{"index.html":{}}}],["problems",{"_index":1089,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedure",{"_index":1570,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1539,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produced",{"_index":742,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["product",{"_index":1308,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":943,"title":{},"body":{"index.html":{}}}],["progress",{"_index":318,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":688,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["properties",{"_index":62,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["property",{"_index":440,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props",{"_index":1623,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.someproperty",{"_index":1625,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.type",{"_index":1690,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospective",{"_index":1458,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provide",{"_index":90,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["provides",{"_index":293,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["providing",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["public",{"_index":727,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["publish",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["pulls",{"_index":284,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["purely",{"_index":274,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":573,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queries",{"_index":583,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["query",{"_index":945,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1620,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":863,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quite",{"_index":965,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidly",{"_index":1262,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":380,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["rarely",{"_index":376,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":885,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":151,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["react.component",{"_index":1630,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1639,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":308,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reading",{"_index":1291,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["real",{"_index":1147,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["really",{"_index":1366,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rears",{"_index":1103,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reasons",{"_index":614,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["received",{"_index":661,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["recent",{"_index":1429,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recently",{"_index":1750,"title":{},"body":{"additional-documentation/testing.html":{}}}],["recognises",{"_index":553,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommended",{"_index":1188,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["reconnect",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["recorded",{"_index":498,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangle",{"_index":1203,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1568,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduce",{"_index":261,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["redundant",{"_index":1438,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["refer",{"_index":401,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reference",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["refers",{"_index":1135,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reflected",{"_index":375,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["registered",{"_index":741,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["registers",{"_index":1061,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["regular",{"_index":1137,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["related",{"_index":396,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["relative",{"_index":348,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["released",{"_index":1006,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":327,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["remember",{"_index":1152,"title":{},"body":{"additional-documentation/guide.html":{}}}],["reminded",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":1450,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["renamed",{"_index":1678,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["renaming",{"_index":1107,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["render",{"_index":223,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["rendered",{"_index":231,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/testing.html":{}}}],["rendering",{"_index":196,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["renders",{"_index":1372,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["repeat(8",{"_index":1386,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replace",{"_index":1548,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replacing",{"_index":1476,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1428,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replicate",{"_index":489,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["represent",{"_index":76,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["representing",{"_index":496,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["represents",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{}}}],["require",{"_index":99,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/testing.html":{}}}],["required",{"_index":565,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["requires",{"_index":1096,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolve",{"_index":1144,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolving",{"_index":1116,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resorting",{"_index":386,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respectively",{"_index":1067,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":1150,"title":{},"body":{"additional-documentation/guide.html":{}}}],["responsible",{"_index":1294,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1699,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":31,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["result.dropeffect",{"_index":557,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resulting",{"_index":1243,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["results",{"_index":33,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["resurrected",{"_index":600,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":60,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["returned",{"_index":116,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["returning",{"_index":501,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reusable",{"_index":692,"title":{},"body":{"interfaces/Offset.html":{}}}],["reuse",{"_index":279,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rgba(0,0,0,0",{"_index":1592,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":358,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["root",{"_index":689,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["rows",{"_index":1388,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1542,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rules",{"_index":920,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["runs",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["rxjs",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/operators",{"_index":1582,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sake",{"_index":1390,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":1066,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":1242,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalars",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["schedule",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":819,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scoped",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["screen",{"_index":1226,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":204,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshotting",{"_index":368,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["seamlessly",{"_index":1090,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["seconds",{"_index":928,"title":{},"body":{"index.html":{}}}],["section",{"_index":1327,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":64,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["seem",{"_index":1490,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1564,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["selecting",{"_index":1228,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":329,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sense",{"_index":1369,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensible",{"_index":378,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separate",{"_index":270,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["separated",{"_index":1479,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["serves",{"_index":1505,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["service",{"_index":1433,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":379,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":638,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["setting",{"_index":467,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["settype",{"_index":405,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(type",{"_index":429,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settypes",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypes",{"_index":625,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["settypes(type",{"_index":627,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["shallow",{"_index":648,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["shallowequal",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["shortcut",{"_index":466,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":1129,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":615,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":1142,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1584,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["shows",{"_index":522,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["sick",{"_index":980,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":1077,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":597,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simple",{"_index":488,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":662,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simply",{"_index":260,"title":{},"body":{"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simulate",{"_index":426,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["simulation",{"_index":1714,"title":{},"body":{"additional-documentation/testing.html":{}}}],["single",{"_index":1191,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situations",{"_index":1178,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1374,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":1321,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sized",{"_index":1194,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sizes",{"_index":351,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["skyhook",{"_index":818,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["skyhook's",{"_index":1618,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["skyhook/core",{"_index":719,"title":{},"body":{"injectables/SkyhookDndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["skyhook/multi",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["skyhook/sortable",{"_index":866,"title":{},"body":{"index.html":{}}}],["skyhook](https://github.com/angular",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["skyhookdndmodule",{"_index":42,"title":{"modules/SkyhookDndModule.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["skyhookdndmodule.forroot",{"_index":50,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["skyhookdndservice",{"_index":86,"title":{"injectables/SkyhookDndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["skyhookdndservice#draglayer",{"_index":1157,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#dragsource",{"_index":1154,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice#droptarget",{"_index":1156,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["skyhookdndservice.draglayer",{"_index":239,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["skyhookdndservice.dragsource",{"_index":1619,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["slightly",{"_index":1519,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":137,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":1222,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":271,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["solid",{"_index":1384,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solution",{"_index":1436,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solutions",{"_index":903,"title":{},"body":{"index.html":{}}}],["solve",{"_index":1088,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":1120,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":1240,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexports",{"_index":1108,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someone",{"_index":1563,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperty",{"_index":1624,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["something",{"_index":246,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometimes",{"_index":208,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewhere",{"_index":285,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortable",{"_index":955,"title":{},"body":{"index.html":{}}}],["source",{"_index":230,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["source's",{"_index":664,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["sources",{"_index":579,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["space",{"_index":1350,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1314,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hover",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":218,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specific",{"_index":911,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specification.ts",{"_index":531,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["specifics",{"_index":1078,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["specified",{"_index":97,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["specifies",{"_index":346,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["specify",{"_index":325,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifying",{"_index":521,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["specs",{"_index":1125,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["spirit",{"_index":1566,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":232,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["square",{"_index":1298,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponent",{"_index":1295,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponents",{"_index":1480,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squares",{"_index":1301,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../tokens.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":1020,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrappers.ts",{"_index":1016,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connection",{"_index":73,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.ts",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{}}}],["src/connectors.ts",{"_index":335,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.ts",{"_index":323,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.ts",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/SkyhookDndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":530,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":652,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/layer",{"_index":312,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":670,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/source",{"_index":473,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":641,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.ts",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":690,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/wrappers.ts",{"_index":1021,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stage",{"_index":1538,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamping",{"_index":924,"title":{},"body":{"index.html":{}}}],["standard",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":229,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["started",{"_index":249,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{}}}],["starts",{"_index":364,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["state",{"_index":130,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["statements",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":700,"title":{},"body":{"modules/SkyhookDndModule.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["statically",{"_index":1117,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["stationary",{"_index":1525,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":1495,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["steps",{"_index":1072,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1396,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":1161,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["strange",{"_index":1172,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategy",{"_index":1483,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictly",{"_index":649,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"index.html":{}}}],["string",{"_index":430,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["strings",{"_index":1693,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1696,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":541,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["structure",{"_index":1196,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggle",{"_index":984,"title":{},"body":{"index.html":{}}}],["style",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["styles",{"_index":1317,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["styling",{"_index":372,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["sub",{"_index":865,"title":{},"body":{"index.html":{}}}],["subj",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":111,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subs",{"_index":1183,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscribe",{"_index":174,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscriber",{"_index":219,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["subscribers",{"_index":1430,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["subscribes",{"_index":1671,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["subscribing",{"_index":394,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":82,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":1181,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlike",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["subscriptions",{"_index":167,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["successful",{"_index":1487,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":381,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffice",{"_index":198,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["sufficient",{"_index":585,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["sufficiently",{"_index":1139,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["superpowers",{"_index":960,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":283,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{}}}],["supplies",{"_index":1669,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["supply",{"_index":1689,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["supplying",{"_index":1710,"title":{},"body":{"additional-documentation/testing.html":{}}}],["support",{"_index":389,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["supports",{"_index":720,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["sure",{"_index":241,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["switch",{"_index":812,"title":{},"body":{"changelog.html":{},"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":431,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/MonitorBase.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["symbols",{"_index":1695,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":1057,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":639,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["table",{"_index":845,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":844,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1331,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":890,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":448,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["target(s",{"_index":1751,"title":{},"body":{"additional-documentation/testing.html":{}}}],["targets",{"_index":499,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["taste",{"_index":976,"title":{},"body":{"index.html":{}}}],["tear",{"_index":1162,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["teardownlogic",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["technically",{"_index":608,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tedious",{"_index":711,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["tell",{"_index":1521,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["template",{"_index":169,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["template's",{"_index":1681,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["templates",{"_index":871,"title":{},"body":{"index.html":{}}}],["tempted",{"_index":572,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":1177,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["terms",{"_index":1676,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":494,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/testing.html":{}}}],["testable",{"_index":1711,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbackend",{"_index":1724,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed",{"_index":1726,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.configuretestingmodule",{"_index":1735,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.createcomponent(mycomponent",{"_index":1740,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.get(drag_drop_manager",{"_index":1738,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testing",{"_index":428,"title":{"additional-documentation/testing.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/testing.html":{}}}],["tests",{"_index":1718,"title":{},"body":{"additional-documentation/testing.html":{}}}],["text",{"_index":1229,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that's",{"_index":400,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["there's",{"_index":987,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1662,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":986,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["things",{"_index":905,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["think",{"_index":990,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1336,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":1164,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe(map(c",{"_index":1585,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(coll",{"_index":1589,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposition",{"_index":1461,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":722,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.add(xxx.subscribe",{"_index":716,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.destroy.unsubscribe",{"_index":723,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["this.dnd.dragsource",{"_index":545,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":1163,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"dragme",{"_index":1204,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource(\"paper",{"_index":1128,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource(\"test",{"_index":1755,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1516,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.dragsource(null",{"_index":449,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.dnd.droptarget",{"_index":556,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"injectables/SkyhookDndService.html":{}}}],["this.dnd.droptarget(\"cat",{"_index":1251,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.dnd.droptarget(\"dragme",{"_index":1212,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.droptarget(\"test",{"_index":1756,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":1165,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1549,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1635,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(pos",{"_index":1472,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.position",{"_index":1554,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposition",{"_index":1434,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(pos",{"_index":1453,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.position",{"_index":1555,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":546,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1638,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1636,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1432,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1460,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1603,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1528,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscribe",{"_index":1517,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscribe",{"_index":1173,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":1123,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.model.parentid.tostring",{"_index":456,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.notation",{"_index":1666,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":1131,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.position",{"_index":1547,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.props",{"_index":1632,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperty",{"_index":491,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":416,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.listen(m",{"_index":1274,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/testing.html":{}}}],["this.source.settype(t",{"_index":461,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscribe",{"_index":1167,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["this.subs",{"_index":1184,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscribe",{"_index":1185,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscribe",{"_index":1187,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":1255,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":155,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.settype(\"parent_",{"_index":455,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.settype(this.type",{"_index":452,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.unsubscribe",{"_index":1168,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["those",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":607,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":1153,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["throw",{"_index":1451,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":367,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":745,"title":{},"body":{"injectables/SkyhookDndService.html":{}}}],["time",{"_index":300,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["timely",{"_index":303,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["times",{"_index":735,"title":{},"body":{"injectables/SkyhookDndService.html":{},"index.html":{}}}],["tiny",{"_index":1285,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.x",{"_index":1465,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.y",{"_index":1467,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["told",{"_index":451,"title":{},"body":{"interfaces/DragSource.html":{}}}],["tons",{"_index":899,"title":{},"body":{"index.html":{}}}],["tool",{"_index":937,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":852,"title":{},"body":{"index.html":{}}}],["top",{"_index":360,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":1040,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["touchbackend",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["touching",{"_index":1227,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["traditional",{"_index":916,"title":{},"body":{"index.html":{}}}],["transit",{"_index":687,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translate",{"_index":896,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translated",{"_index":349,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["translating",{"_index":897,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translation",{"_index":1288,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transparent",{"_index":1530,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trapped",{"_index":1416,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":922,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":933,"title":{},"body":{"index.html":{}}}],["trick",{"_index":1440,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["troubleshooting",{"_index":1100,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":316,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":872,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthy",{"_index":1442,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["try",{"_index":574,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["trying",{"_index":1715,"title":{},"body":{"additional-documentation/testing.html":{}}}],["tslib",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1484,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["turning",{"_index":1348,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutorial",{"_index":864,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":533,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"modules/SkyhookDndModule.html":{},"injectables/SkyhookDndService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(s",{"_index":1692,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type(t",{"_index":460,"title":{},"body":{"interfaces/DragSource.html":{}}}],["type_dynamic",{"_index":843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1013,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":433,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["typeerror",{"_index":1101,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":628,"title":{},"body":{"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{}}}],["types",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"injectables/SkyhookDndService.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["types.ts",{"_index":74,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["typical",{"_index":1650,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["typically",{"_index":221,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["typing",{"_index":542,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["typo",{"_index":633,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":1224,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1419,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefined",{"_index":1105,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["under",{"_index":252,"title":{},"body":{"interfaces/DragLayer.html":{},"changelog.html":{},"index.html":{}}}],["underlying",{"_index":1546,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":458,"title":{},"body":{"interfaces/DragSource.html":{}}}],["understandable",{"_index":1609,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["unicode",{"_index":1315,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirectional",{"_index":874,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1214,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlike",{"_index":1427,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmounted",{"_index":598,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unsubscribe",{"_index":80,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["unsubscribed",{"_index":419,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["unsubscribing",{"_index":707,"title":{},"body":{"injectables/SkyhookDndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["until",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwanted",{"_index":1230,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":505,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["update",{"_index":437,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["updated",{"_index":304,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["updates",{"_index":1265,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["upgrade",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":1600,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["urls",{"_index":1602,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["usable",{"_index":1281,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["usage",{"_index":1704,"title":{},"body":{"additional-documentation/testing.html":{}}}],["use",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["used",{"_index":222,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["useful",{"_index":83,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["user",{"_index":527,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["users",{"_index":983,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["uses",{"_index":935,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["using",{"_index":214,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usually",{"_index":407,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["v9",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["valid",{"_index":1567,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["value",{"_index":391,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["values",{"_index":958,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["vanish",{"_index":1499,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variable",{"_index":170,"title":{},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["variables",{"_index":1022,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variably",{"_index":1193,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["vector",{"_index":683,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["version",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertical",{"_index":359,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["very",{"_index":483,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["via",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1343,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":682,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visible",{"_index":870,"title":{},"body":{"index.html":{}}}],["visual",{"_index":947,"title":{},"body":{"index.html":{}}}],["visuals",{"_index":275,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1473,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":1136,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["vue",{"_index":988,"title":{},"body":{"index.html":{}}}],["wait",{"_index":1237,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wanting",{"_index":974,"title":{},"body":{"index.html":{}}}],["warned",{"_index":972,"title":{},"body":{"index.html":{}}}],["watching",{"_index":982,"title":{},"body":{"index.html":{}}}],["way",{"_index":1049,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ways",{"_index":1180,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1312,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we're",{"_index":1175,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":995,"title":{},"body":{"index.html":{}}}],["web",{"_index":1606,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1319,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1492,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":1041,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what's",{"_index":1511,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatever",{"_index":1330,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":245,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"injectables/SkyhookDndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1297,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":808,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1358,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wish",{"_index":441,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["within",{"_index":1211,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":94,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":392,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":382,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["works",{"_index":881,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1290,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1378,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":1544,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservice",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrappers",{"_index":85,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrapping",{"_index":1381,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["write",{"_index":459,"title":{},"body":{"interfaces/DragSource.html":{}}}],["writing",{"_index":84,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":900,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":694,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,y",{"_index":681,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xxx",{"_index":1058,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["xy",{"_index":693,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1406,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":695,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":861,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["yellow",{"_index":1593,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yes",{"_index":423,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{},"injectables/SkyhookDndService.html":{}}}],["you'd",{"_index":1512,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1364,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you're",{"_index":213,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you've",{"_index":1531,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":216,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":1166,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1594,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":884,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":784,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(teardownLogic: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription#add \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardownLogic\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         AddSubscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing backends that need configuring before use to SkyhookDndModule.\nFor use with the MultiBackend:\n```typescript\n\nimport { createDefaultMultiBackend } from '@angular-skyhook/multi-backend';\n// ...\nSkyhookDndModule.forRoot({ backendFactory: createDefaultMultiBackend })\n\n\nor with the TouchBackend by itself:\n```typescript\n\nexport function createTouchBackend() {\nreturn TouchBackend({ enableMouseEvents: false });\n}\n// ...\nSkyhookDndModule.forRoot({ backendFactory: createTouchBackend })\n\n\nYou have to do this to retain AOT compatibility.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backendFactory\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                    \n                                \n                                \n                                    \n                                        backendFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    See above. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n            \n                Description\n            \n            \n                Use this for providing plain backends to SkyhookDndModule. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        backend\n                                \n                                \n                                            Optional\n                                        debug\n                                \n                                \n                                            Optional\n                                        options\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    add\n                                \n                                \n                                    listen\n                                \n                                \n                                    unsubscribe\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            add\n                        \n                        \n                    \n                \n            \n            \n                \nadd(teardown: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the SkyhookDndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n    let subj = new Subject();\n    let dt = dndService.dropTarget(types, {\n        ...spec,\n        hover: monitor => {\n            subj.next();\n            spec.hover && spec.hover(monitor);\n        }\n    });\n    // runs the callback until the returned connection\n    // is destroyed via unsubscribe()\n    dt.add(subj.pipe( ... ).subscribe(callback))\n    return dt;\n}\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardown\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: TMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n  isDragging: monitor.isDragging(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop(),\n}));... in which case you probably want to use the *ngIf as pattern for\n  grouping subscriptions into one bound template variable:\n\n  {{c.isDragging ? 'dragging': null}}\n  ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            unsubscribe\n                        \n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n\n\n            \n                \n                    This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                              => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: SkyhookDndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use @angular-skyhook/multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    listen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listen\n                        \n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe\nto.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDragging\n                        \n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    true if there is a drag operation in progress, false otherwise. \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot as an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        The drag source for which this element will be the preview. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                \n                \n                    \n                        Type :         DragPreviewOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        anchorX\n                                \n                                \n                                            Optional\n                                        anchorY\n                                \n                                \n                                            Optional\n                                        captureDraggingState\n                                \n                                \n                                            Optional\n                                        offsetX\n                                \n                                \n                                            Optional\n                                        offsetY\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                    \n                                \n                                \n                                    \n                                        anchorX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                    \n                                \n                                \n                                    \n                                        anchorY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                    \n                                \n                                \n                                    \n                                        offsetX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                    \n                                \n                                \n                                    \n                                        offsetY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDragPreview\n                                \n                                \n                                    connectDragSource\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connectDragPreview\n                        \n                        \n                    \n                \n            \n            \n                \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragPreviewOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connectDragSource\n                        \n                        \n                    \n                \n            \n            \n                \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragSourceOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandlerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drag source ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setType\n                        \n                        \n                    \n                \n            \n            \n                \nsetType(type: string | symbol)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n@Input() type: string;\n@Input() model: { parentId: number; name: string; };\ntarget = this.dnd.dragSource(null, {\n  // ...\n});\nngOnChanges() {\n  // use what your parent component told you to\n  this.target.setType(this.type);\n  // or create groupings on the fly\n  this.target.setType(\"PARENT_\" + this.model.parentId.toString());\n}It may be more convenient or easier to understand if you write:\n@Input() set type(t) {\n  this.source.setType(t);\n}\nsource = this.dnd.dragSource(null, {\n  beginDrag: () => ({ ... })\n});\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        Which source to connect the DOM to \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                \n                \n                    \n                        Type :         DragSourceOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                \n                \n                    \n                        Type :     string | symbol\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DragSource. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrag\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDrag\n                        \n                        \n                    \n                \n            \n            \n                \ncanDrag()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n  canDrag: () => this.someProperty\n}\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            didDrop\n                        \n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDropResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDragging\n                        \n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dropEffect\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\n```typescript\n\ninterface MyDraggedItemType { id: number; }\n// ...\nsource = this.dnd.dragSource(..., {\nbeginDrag: monitor => ({ id: this.id })\n})\n\n\nDropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\n```typescript\n\ninterface HTML5DropResult { dropEffect: string; }\ninterface MyDropResult extends HTML5DropResult { id: number; }\ntarget = this.dnd.dropTarget(..., {\ndrop: monitor => ({ id: this.id })\n});\n\nsource = this.dnd.dragSource(..., {\nendDrag: monitor => {\nconst result = monitor.getDropResult();\nif (result.dropEffect === 'copy') {\n// user had alt key pressed + the GreenPlus icon when they dropped,\n// so copy instead of move\n}\n}\n});\n```\n\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    beginDrag\n                                \n                                \n                                        Optional\n                                    canDrag\n                                \n                                \n                                        Optional\n                                    endDrag\n                                \n                                \n                                        Optional\n                                    isDragging\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            beginDrag\n                        \n                        \n                    \n                \n            \n            \n                \nbeginDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like `{ id:\n\nthis.id }` from this method.\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Item\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            canDrag\n                        \n                        \n                    \n                \n            \n            \n                \ncanDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            endDrag\n                        \n                        \n                    \n                \n            \n            \n                \nendDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            isDragging\n                        \n                        \n                    \n                \n            \n            \n                \nisDragging(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    By default, only the drag source that initiated the drag operation is\nconsidered to be dragging. You might override this by matching on the\nDragSourceMonitor.id and your component's id, or similar. Do this if the\noriginal component may be unmounted during the dragging and later\n\"resurrected\" with a different parent. For example, when moving a card\nacross the lists in a Kanban board, you want it to retain the dragged\nappearance—even though technically, the component gets unmounted and\na different one gets mounted every time you hover over another list.\nNote: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to SkyhookDndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    connectDropTarget\n                                \n                                \n                                    getHandlerId\n                                \n                                \n                                    setTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            connectDropTarget\n                        \n                        \n                    \n                \n            \n            \n                \nconnectDropTarget(elementOrNode: Node)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandlerId\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drop target ID that can be used to simulate the drag and drop events with the testing backend. \n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setTypes\n                        \n                        \n                    \n                \n            \n            \n                \nsetTypes(type: TypeOrTypeArray)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                TypeOrTypeArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropTargetType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                \n                \n                    \n                        Type :         DropTarget\n\n                    \n                \n                \n                    \n                        Which target to connect the DOM to \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n                \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                \n                \n                    \n                        Type :         TypeOrTypeArray\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DropTarget. \n\n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t)\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method. \n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    canDrop\n                                \n                                \n                                    didDrop\n                                \n                                \n                                    getDropResult\n                                \n                                \n                                    isOver\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canDrop\n                        \n                        \n                    \n                \n            \n            \n                \ncanDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            didDrop\n                        \n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDropResult\n                        \n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isOver\n                        \n                        \n                    \n                \n            \n            \n                \nisOver(options?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n            \n                Description\n            \n            \n                The spec passed to SkyhookDndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    canDrop\n                                \n                                \n                                        Optional\n                                    drop\n                                \n                                \n                                        Optional\n                                    hover\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            canDrop\n                        \n                        \n                    \n                \n            \n            \n                \ncanDrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \ndrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called when a compatible item is dropped on the target. You may either\nreturn nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DropResult | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Optional\n                            hover\n                        \n                        \n                    \n                \n            \n            \n                \nhover(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n            \n                Description\n            \n            \n                The methods common to all monitor classes. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getClientOffset\n                                \n                                \n                                    getDifferenceFromInitialOffset\n                                \n                                \n                                    getInitialClientOffset\n                                \n                                \n                                    getInitialSourceClientOffset\n                                \n                                \n                                    getItem\n                                \n                                \n                                    getItemType\n                                \n                                \n                                    getSourceClientOffset\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getClientOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged. \n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDifferenceFromInitialOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetDifferenceFromInitialOffset()\n                \n            \n\n\n\n\n            \n                \n                    A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged. \n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialClientOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged. \n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInitialSourceClientOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetInitialSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged. \n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItem\n                        \n                        \n                    \n                \n            \n            \n                \ngetItem()\n                \n            \n\n\n\n\n            \n                \n                    The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged. \n\n\n                    \n                        Returns :     Item | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getItemType\n                        \n                        \n                    \n                \n            \n            \n                \ngetItemType()\n                \n            \n\n\n\n\n            \n                \n                    The type of the item in transit. Returns null if no item is being dragged. \n\n\n                    \n                        Returns :     string | symbol | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getSourceClientOffset\n                        \n                        \n                    \n                \n            \n            \n                \ngetSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is\nbeing dragged. \n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        x\n                                \n                                \n                                        y\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SkyhookDndModule.html":{"url":"modules/SkyhookDndModule.html","title":"module - SkyhookDndModule","body":"\n                   \n\n\n\n\n    Modules\n    SkyhookDndModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(backendOrBackendFactory: BackendInput | BackendFactoryInput)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    backendOrBackendFactory\n                                    \n                                            BackendInput | BackendFactoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SkyhookDndService.html":{"url":"injectables/SkyhookDndService.html","title":"injectable - SkyhookDndService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SkyhookDndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. @angular-skyhook/core\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n  // ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dragLayer\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dragLayer(subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                    \n                \n            \n\n            \n                \n                    This method creates a DragLayer object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragLayer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dragSource\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dragSource(type: string | symbol | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This method creates a DragSource object. It represents a drag\nsource and its behaviour, and can be connected to a DOM element by\nassigning it to the [dragSource] directive on that element in your\ntemplate.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what\nitem data to hoist up; the callback (just 1) is for notifying you when\nthe drag ends.\nOnly the drop targets registered for the same type will\nreact to the items produced by this drag source. If you want a dynamic\ntype, pass null as the type; and call DragSource in\na lifecycle hook.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    spec\n                                    \n                                            DragSourceSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            dropTarget\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                                TypeOrTypeArray | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    spec\n                                    \n                                            DropTargetSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DropTarget\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n1.3.3 (2019-10-23)\nBug Fixes\n\ncore: provide global context correctly and fix options injection, fix #505, fix #506 (9c7d4a7)\ncore: schedule a reconnect() call to match react-dnd's behaviour (f97738f)\n\n1.3.0 (2019-10-06)\nBug Fixes\n\nbump minimum dnd-core to v9 (7626565)\n\n1.2.1 (2019-06-16)\nBug Fixes\n\ncore: more flexible zone.js peer dependency for angular 8+ (caf5e2e)\ncore, multi-backend: bump dnd-core & friends to 8.0.0 (09b26c9)\n\n1.1.1 (2019-02-14)\nNote: Version bump only for package @angular-skyhook/core\n1.1.0 (2018-11-27)\nBug Fixes\n\nupgrade dnd-core and html5-backend dependencies (f5a19b8)\n\n\n1.0.11 (2018-09-11)\nBug Fixes\n\npublish dist directory instead of whole folder (50f7dc9)\n\n\n1.0.10 (2018-09-11)\nBug Fixes\n\npackage: switch to scoped packages, i.e. @skyhook/core (874723a)\nPublish under [@angular-skyhook](https://github.com/angular-skyhook)/* scope (d14b101)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            ConnectionBase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragLayer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragSource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DropTarget\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            injectable\n            SkyhookDndService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            interface\n            AddSubscription\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragPreviewOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragSourceOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragPreviewDirective\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragSourceDirective\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DropTargetDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendFactoryInput\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendInput\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/drag-source-specification.ts\n            \n            interface\n            DragSourceSpec\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/drop-target-specification.ts\n            \n            interface\n            DropTargetSpec\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/layer-monitor.ts\n            \n            interface\n            DragLayerMonitor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/monitor-base.ts\n            \n            interface\n            MonitorBase\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/source-monitor.ts\n            \n            interface\n            DragSourceMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/target-monitor.ts\n            \n            interface\n            DropTargetMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_DEBUG_MODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_GLOBAL_CONTEXT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_MANAGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            TYPE_DYNAMIC\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/type-ish.ts\n            \n            interface\n            Offset\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^9.0.0\n        \n            tslib : ^1.9.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/core : >= 6.0.0\n        \n            rxjs : >= 6.0.0\n        \n            zone.js : >= 0.8.26\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@angular-skyhook\n \n\n\n\nSkyhook is a toolkit for building complex drag and drop interfaces in\nAngular. It is based on, and very similar to react-dnd by Dan\nAbramov and others, and is also powered by dnd-core. It\nis compatible with all backends.\nCheck out the examples here.\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\n@angular-skyhook/multi-backend\n@angular-skyhook/sortable\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, and doesn't use classes and CSS to do 'callbacks'.\nEvery visible change is made through Angular templates.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store)\nObservable APIs, designed to fit in Angular.\nTypeScript friendly, with strong typing for in-flight objects, and inline\ndocumentation.\nWorks with HTML5 drag and drop, and all other react-dnd backends.\n\nGoals\n\nHigh performance. All code runs outside the Angular zone, and\nre-enters in batches only where strictly necessary, such that change detection\nruns precisely as many times as you need it to, with no extra configuration.\nYou should also be able to take full advantage of OnPush change detection.\n\nLargely possible to translate react-dnd code and examples into Angular\n(see Translating React Code).\n\nComprehensive documentation and tons of example code, written in Angular\nstyle.\n\n\nWhat can you do with it?\nInstead of building maximally-ergonomic solutions to simple use cases,\nreact-dnd and @angular-skyhook provide an abstraction over most things you\ncould want to do with drag and drop. They are lower-level building blocks that\nmake it easy to implement some very complex interactions. They assign no\nspecific meaning to a drag/drop operation. You get to define what happens when\na drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have\na mutable array of simple values, you don't necessarily need the superpowers in\nthis library. There are plenty of cookie-cutter solutions out there, like the\nquite powerful ng2-dnd or ng2-dragula, which may\nget you to your deadline faster than learning and using @angular-skyhook. But\nbe warned; you may find yourself wanting more dragging power once you get\na taste. In fact, this package was born when\n@cormacrelf got sick of maintaining\nng2-dragula and watching users struggle to implement what react-dnd was born\nfor.\nIf Angular and React aren't your thing, there's also vue-react-dnd.\nIssues\nNot all issues are @angular-skyhook-related. If you think you found a bug in\ndnd-core or with the HTML5 backend, those issues belong on that\ncodebase with their many contributors\nand wealth of experience. If there is a problem with another backend you are\nusing, file an issue with that backend so you can get more specific help and so\nthat the community can benefit.\nIssues and potential improvements to @angular-skyhook are discussed on\nGitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core,\nwhich is (now) also under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SkyhookDndModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DragSourceDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DragSourceFactory   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetFactory   (src/.../wrappers.ts)\n                        \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                        \n                            Types   (src/.../wrappers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/wrappers.ts\n    \n    \n        \n            \n                \n                    \n                    DragSourceDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DragSourceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Types\n                \n            \n            \n                \n                        string | symbol | (string | symbol)[]\n\n                \n            \n        \n    \n    src/type-ish.ts\n    \n    \n        \n            \n                \n                    \n                    TypeOrTypeArray\n                \n            \n            \n                \n                    String, symbol, or an array of either. Used on drop targets. \n\n                \n            \n            \n                \n                        string | symbol | Array\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_DEBUG_MODE   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_OPTIONS   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_GLOBAL_CONTEXT   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core compatible backend'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND_DEBUG_MODE\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'should dnd-core run in debug mode?'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_BACKEND_OPTIONS\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'options for dnd-core compatible backend'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend's options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_GLOBAL_CONTEXT\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core context'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core compatible backend currently in use. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DRAG_DROP_MANAGER\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new InjectionToken(\n    'dnd-core DragDropManager'\n)\n                        \n                    \n\n                \n                    \n                        The injection token for the dnd-core DragDropManager \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TYPE_DYNAMIC\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     symbol\n\n                        \n                    \n                    \n                        \n                            Default value : Symbol(\n    'no type specified, you must provide one with setType/setTypes'\n)\n                        \n                    \n\n                \n                    \n                        The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee DragSource, DropTarget.\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nInstallation\nyarn add @angular-skyhook/core react-dnd-html5-backendYou might consider @angular-skyhook/multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import SkyhookDndModule and provide the backend:\nimport { SkyhookDndModule } from \"@angular-skyhook/core\";\nimport { default as HTML5Backend } from 'react-dnd-html5-backend'\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    SkyhookDndModule.forRoot({ backend: HTML5Backend }),\n  ]\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import SkyhookDndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nWhen installing backends originally made for React (they all use default\nexports), make sure you use this syntax:\nimport { default as XXX } from '...'\n... because Angular in AOT mode cannot do import XXX from '...'\ndirectly.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\noperation\nA drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\nwhile dragging\nA way for each to provide, listen for and query changes in the drag state:\na monitor and appropriate callbacks\nHooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\n@angular-skyhook/multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The @angular-skyhook version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    SkyhookDndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { default as HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend';Generally, make sure you are importing the backend correctly. If it does not\nprovide Typescript definitions, you might have to read the documentation or\nbrowse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\nSkyhookDndModule.forRoot({ backend: MyBackend }) instead of plain SkyhookDndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource(\"PAPER\", {\n    // use shorthand for one-liners that return a value\n    canDrag: () => this.paperCount > 0,\n    endDrag: (monitor) => {\n        if (monitor.didDrop()) {\n            this.paperCount--;\n        }\n    }\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nWhen using @angular-skyhook, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nSkyhookDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nSkyhookDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the SkyhookDndService to create connections\nFirst, inject \nSkyhookDndService,\n into your component.\nconstructor(private dnd: SkyhookDndService) { ... }Then, use one of the methods\nSkyhookDndService#dragSource,\nSkyhookDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: SkyhookDndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the SkyhookDndService methods which will do this for you.\nimport { Subscription } from 'rxjs';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\nNext: Connecting to DOM.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\n\n  drag me\nsource = this.dnd.dragSource(\"DRAGME\", {\n  beginDrag: () => ({ name: 'Jones McFly' }),\n  // other DragSourceSpec methods\n});\n// constructor, unsubscribe, etcThen, investigate using\nDragSourceSpec\nto customise the behaviour.\nMaking a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\n\n  drop on me\ntarget = this.dnd.dropTarget(\"DRAGME\", {\n    drop: monitor => {\n        console.log('dropped an item:', monitor.getItem()); // => { name: 'Jones McFly' }\n    }\n})\n// constructor, unsubscribe, etcThen, investigate using\nDropTargetSpec\nto customise the behaviour.\nDrag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\nNext: Monitoring State.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DropTarget\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nFor example:\n\n    drop cats here\n.cat-target { background: #eee; }\n.cat-target--hovering { background: lightgoldenrodyellow; }target = this.dnd.dropTarget(\"CAT\", {\n    drop: monitor => {\n        console.log('dropped a cat');\n    }\n});\n\n// this is a very useful combination on a drop target,\n// which expresses 'hovering over' + ('same type' + 'DropTargetSpec.canDrop returned true')\n// you almost always want to use the combination rather than isOver on its own\nhovering$ = this.target.listen(m => m.isOver() && m.canDrop());What can you listen to?\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in these interfaces:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nOptimisation\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nThe implementation of listen() includes an implementation of RxJS'\ndistinctUntilChanged that also optimises for JS Objects with the same keys\nbut different values. The following two examples fire exactly as often:\nisDraggingPlain$ = this.source.listen(m => m.isDragging());\nisDraggingObj$   = this.source.listen(m => ({ isDragging: m.isDragging() }));This is helpful if you have a lot of properties to listen to and wish to\nreduce the number of | async pipes in your code, or if you want to copy\nsome react-dnd code.\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nSkyhookDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-knight',\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n    }\n    `]\n})\nexport class KnightComponent {\n}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host, div {\n    display: block;\n    height: 100%;\n    width: 100%;\n    text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n    \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-board',\n    template: `\n    \n        \n            \n        \n    \n    `\n})\nexport class BoardComponent {\n}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n    \n        \n    \n// ...\nexport class BoardComponent {\n    sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n    width: 100%;\n    height: 100%;\n    border: 1px solid black;\n    display: grid;\n    grid-template-columns: repeat(8, 12.5%);\n    grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n    \n        \n    \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n\nknightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n    \n        \n            \n                \n                    \n                    \n                \n            \n        \n    The resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n    this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n\n    knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n    currentPosition: Coord;\n\n    constructor() {\n        this.knightPosition$.subscribe(kp => {\n            this.currentPosition = kp;\n        })\n    }\n\n    moveKnight(to: Coord) {\n        this.knightPosition$.next(to);\n    }\n\n    canMoveKnight(to: Coord) {\n        const { x, y } = this.currentPosition;\n        const dx = to.x - x;\n        const dy = to.y - y;\n\n        return (Math.abs(dx) === 2 && Math.abs(dy) === 1) ||\n               (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n    }\n\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n    if (this.game.canMoveKnight(pos)) {\n        this.game.moveKnight(pos);\n    }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n    KNIGHT: \"KNIGHT\"\n}Then, make your KnightComponent into a drag source.\n\nInject SkyhookDndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from './constants';\n\n@Component({\n    selector: 'app-knight',\n                     // step 3\n    template: `♘`,\n    styles: [`\n    span {\n        font-weight: 700;\n        font-size: 54px;\n    }\n    `]\n})\nexport class KnightComponent {\n    // step 2\n    knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n        beginDrag: () => ({})\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.knightSource.unsubscribe();\n    }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n    opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. @angular-skyhook makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input  } from \"@angular/core\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n    \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject SkyhookDndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input  } from \"@angular/core\";\nimport { SkyhookDndService } from \"@angular-skyhook/core\";\nimport { ItemTypes } from \"./constants\";\n\n@Component({\n    selector: 'app-board-square',\n    template: `\n                         \n    \n        \n            \n        \n    \n    `, styles: [`\n    :host, .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n    }\n    `]\n})\nexport class BoardSquareComponent {\n    @Input() position: Coord;\n    get black() {\n         const { x, y } = this.position;\n         return (x + y) % 2 === 1;\n    }\n\n    // step 2\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n\n    });\n\n    // step 1\n    constructor(private dnd: SkyhookDndService) { }\n\n    // step 4\n    ngOnDestroy() {\n        this.target.unsubscribe();\n    }\n\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: SkyhookDndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:    \n        \n            \n        \n        \n    \nexport class BoardSquareComponent {\n    // ...\n    target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n        // ...\n    });\n\n    collected$ = this.target.listen(m => ({\n        canDrop: m.canDrop(),\n        isOver: m.isOver(),\n    }));\n\n    showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n    overlayStyle$ = this.collected$.pipe(map(coll => {\n        let { canDrop, isOver } = coll;\n        let bg: string = \"rgba(0,0,0,0)\";\n        if (canDrop && isOver) { bg = 'green'; }\n        else if (canDrop && !isOver) { bg = 'yellow'; }\n        else if (!canDrop && isOver) { bg = 'red'; }\n        return {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            height: '100%',\n            width: '100%',\n            zIndex: 1,\n            opacity: 0.5,\n            backgroundColor: bg\n        }\n    }));\n\n    // ...\n\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). @angular-skyhook has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n    // ...\n\n    ngOnInit() {\n        const img = new Image();\n        img.src = // ... long 'data:image/png;base64' url\n                  // regular 'https://' URLs work here too\n        img.onload = () => this.knightSource.connectDragPreview(img);\n    }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to @angular-skyhook's\nSkyhookDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example\ncode demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  }\n}\n@DragSource(\"ITEM\", itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() { /* ... */ }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `  \n    {{someProperty}}\n    \n      I am being dragged now\n    \n  \n  `})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource(\"ITEM\", {\n    beginDrag: (monitor) => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: (monitor) => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    }\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: SkyhookDndService) {}\n  fireAction(item) { /* ... */ }\n  ngOnDestroy() { this.itemSource.destroy(); }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect:\n(connect, monitor) => Object), and the output of the  collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected SkyhookDndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m =>\nm.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function  of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, @angular-skyhook will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/testing.html":{"url":"additional-documentation/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nTesting\nUsage with Jest\nSee The React DnD testing \nguide for details about \nhow to use dnd-core and react-dnd-test-backend with Jest. In particular, you \nwill need to configure the moduleNameMapper as described there.\nTesting Components in Isolation\nThe Angular way of supplying drag state to components is not as easily testable \nas the React way. Currently it is not easy to isolate a component's rendering \nfrom the drag sources, drop targets and drag layers it listens to.\nThe Test Backend\nReact DnD offers a test backend that does not require the DOM, and offers an \nAPI for easy simulation of drag and drop events. This is useful for testing an \nentire drag and drop interaction. (Imagine trying to construct the exact mouse \nevents that represent a drag, just to do basic tests!) It is also useful as a \nlightweight no-op backend if you do not need to test the drag and drop \ninteraction.\nInstall it with:\nyarn add -D react-dnd-test-backendExample usage (example component defined below):\n// Import the test backend\nimport { default as createTestBackend, TestBackend } from 'react-dnd-test-backend';\n// We will need to find the DragDropManager to access the backend through\n// dependency injection\nimport { SkyhookDndModule, DRAG_DROP_MANAGER } from \"@angular-skyhook/core\";\n\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\ndescribe(MyComponent.name, () => {\n\n    let component: MyComponent;\n    let fixture: ComponentFixture;\n\n    // Use this backend to drive drag and drop interactions\n    let backend: TestBackend;\n\n    // We will store the handler ID for each, to pass to the test backend.\n    let source: any;\n    let target: any;\n\n    // MyComponent should render differently while dragging\n    const draggingClassApplied = () => {\n        return fixture.debugElement.query(By.css('.dragging')) != null;\n    };\n\n    beforeEach(async(() => {\n        TestBed.configureTestingModule({\n            imports: [\n                // supply the test backend when creating the testing module\n                SkyhookDndModule.forRoot({ backend: createTestBackend })\n            ],\n            declarations: [MyComponent]\n        })\n    }));\n\n    beforeEach(() => {\n        // grab the manager\n        const manager = TestBed.get(DRAG_DROP_MANAGER);\n        // grab the backend off the manager\n        backend = manager.getBackend();\n        fixture = TestBed.createComponent(MyComponent);\n        component = fixture.componentInstance;\n        // the source and target handler IDs are available after change\n        // detection\n        fixture.detectChanges();\n        source = component.source.getHandlerId();\n        target = component.target.getHandlerId();\n    });\n\n    it('should drag and then drop', () => {\n        // pick up the drag source\n        backend.simulateBeginDrag([source]);\n\n        // check that it rendered differently\n        fixture.detectChanges();\n        expect(draggingClassApplied()).toBeTruthy();\n\n        // hover over the target\n        backend.simulateHover([target]);\n        // drop over the most recently hovered target(s)\n        backend.simulateDrop();\n        // complete the interaction\n        backend.simulateEndDrag();\n\n        fixture.detectChanges();\n        expect(draggingClassApplied()).toBeFalsy();\n    });\n\n});import { Component } from '@angular/core';\nimport { SkyhookDndService } from '@angular-skyhook/core';\n@Component({\ntemplate: `\n    \n    \n`\n})\nclass MyComponent {\n    source = this.dnd.dragSource(\"TEST\", {\n        beginDrag: () => ({}),\n    });\n    target = this.dnd.dropTarget(\"TEST\", {});\n    isDragging$ = this.source.listen(m => m.isDragging());\n    constructor (private dnd: SkyhookDndService) {}\n    ngOnDestroy() {\n        this.source.unsubscribe();\n        this.target.unsubscribe();\n    }\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
